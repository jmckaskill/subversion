=== subversion/include/svn_props.h
==================================================================
--- subversion/include/svn_props.h  (revision 94)
+++ subversion/include/svn_props.h  (local)
@@ -188,6 +188,9 @@
 /** The value to force the special property to when set. */
 #define SVN_PROP_SPECIAL_VALUE "*"
 
+/** The files' last modification time */
+#define SVN_PROP_TEXT_TIME  SVN_PROP_PREFIX "text-time"
+
 /** Describes external items to check out into this directory. 
  *
  * The format is a series of lines, such as:
=== subversion/libsvn_client/commit.c
==================================================================
--- subversion/libsvn_client/commit.c  (revision 94)
+++ subversion/libsvn_client/commit.c  (local)
@@ -209,6 +209,20 @@
           void *pval;
 
           apr_hash_this (hi, &pname, NULL, &pval);
+
+          /* if the svn:text-time property is set, use the current file
+           * date instead of the value */
+          if (strcmp (pname, SVN_PROP_TEXT_TIME) == 0)
+            {
+              apr_time_t mtime;
+
+              SVN_ERR (svn_io_file_affected_time (&mtime, path, pool) );
+              pval=svn_string_create( 
+                                     svn_time_to_cstring (mtime, pool),
+                                     pool );
+            }
+
+
           SVN_ERR (editor->change_file_prop (file_baton, pname, pval, pool));
         }
     }
=== subversion/libsvn_client/commit_util.c
==================================================================
--- subversion/libsvn_client/commit_util.c  (revision 94)
+++ subversion/libsvn_client/commit_util.c  (local)
@@ -30,6 +30,7 @@
 #include "svn_pools.h"
 #include "svn_wc.h"
 #include "svn_props.h"
+#include "svn_time.h"
 
 #include <assert.h>
 #include <stdlib.h>  /* for qsort() */
@@ -418,7 +419,28 @@
 
   /* Set text/prop modification flags accordingly. */
   if (text_mod)
+    {
     state_flags |= SVN_CLIENT_COMMIT_ITEM_TEXT_MODS;
+
+      SVN_ERR (svn_wc_prop_get (&propval, SVN_PROP_TEXT_TIME, path, adm_access,
+                                pool));
+      /* If the text has been modified AND the modification time
+       * should be recorded, there's an property modification too. */
+      if (propval)
+        {
+          apr_time_t mtime;
+
+          SVN_ERR (svn_io_file_affected_time (&mtime, path, pool) );
+          propval=svn_string_create( 
+                                    svn_time_to_cstring (mtime, pool),
+                                    pool );
+          SVN_ERR (svn_wc_prop_set (SVN_PROP_TEXT_TIME, 
+                                    propval, path, adm_access, pool) );
+          state_flags |= SVN_CLIENT_COMMIT_ITEM_PROP_MODS;
+        }
+
+    }
+
   if (prop_mod)
     state_flags |= SVN_CLIENT_COMMIT_ITEM_PROP_MODS;
 
=== subversion/libsvn_client/export.c
==================================================================
--- subversion/libsvn_client/export.c  (revision 94)
+++ subversion/libsvn_client/export.c  (local)
@@ -103,7 +103,7 @@
   svn_subst_eol_style_t style;
   apr_hash_t *props;
   const char *base;
-  svn_string_t *eol_style, *keywords, *executable, *externals, *special;
+  svn_string_t *eol_style, *keywords, *executable, *externals, *special, *text_time;
   const char *eol = NULL;
   svn_boolean_t local_mod = FALSE;
   apr_time_t tm;
@@ -153,6 +153,8 @@
                             APR_HASH_KEY_STRING);
   special = apr_hash_get (props, SVN_PROP_SPECIAL,
                           APR_HASH_KEY_STRING);
+  text_time = apr_hash_get (props, SVN_PROP_TEXT_TIME,
+                            APR_HASH_KEY_STRING);
   
   if (eol_style)
     SVN_ERR (get_eol_style (&style, &eol, eol_style->data, native_eol));
@@ -166,6 +168,9 @@
   else
     {
       tm = entry->cmt_date;
+
+      if (text_time)
+        SVN_ERR(svn_time_from_cstring (&tm, text_time->data, pool));
     }
 
   if (keywords)
@@ -439,6 +444,7 @@
   const char *url;
   const char *author;
   apr_time_t date;
+  svn_boolean_t date_is_mtime;
 
   /* Pool associated with this baton. */
   apr_pool_t *pool;
@@ -629,13 +635,24 @@
   else if (strcmp (name, SVN_PROP_EXECUTABLE) == 0)
     fb->executable_val = svn_string_dup (value, fb->pool);
 
+  /* if we have a specific text-time for this file, it overrides
+   * the commit-timestamp */
+  else if (strcmp (name, SVN_PROP_TEXT_TIME) == 0)
+    {
+      fb->date_is_mtime=TRUE;
+      SVN_ERR (svn_time_from_cstring (&fb->date, value->data, fb->pool));
+    }
+
   /* Try to fill out the baton's keywords-structure too. */
   else if (strcmp (name, SVN_PROP_ENTRY_COMMITTED_REV) == 0)
     fb->revision = apr_pstrdup (fb->pool, value->data);
 
   else if (strcmp (name, SVN_PROP_ENTRY_COMMITTED_DATE) == 0)
+  {
+    /* do not overwrite timestamp */
+    if (!fb->date_is_mtime)
       SVN_ERR (svn_time_from_cstring (&fb->date, value->data, fb->pool));
-
+  }
   else if (strcmp (name, SVN_PROP_ENTRY_LAST_AUTHOR) == 0)
     fb->author = apr_pstrdup (fb->pool, value->data);
 
=== subversion/libsvn_client/repos_diff.c
==================================================================
--- subversion/libsvn_client/repos_diff.c  (revision 94)
+++ subversion/libsvn_client/repos_diff.c  (local)
@@ -32,6 +32,7 @@
 #include "svn_path.h"
 #include "svn_io.h"
 #include "svn_props.h"
+#include "svn_time.h"
 
 #include "client.h"
 
@@ -907,7 +908,22 @@
 
   propchange = apr_array_push (b->propchanges);
   propchange->name = apr_pstrdup (b->pool, name);
+
+  /* if the svn:text-time property is set, use the current file
+   * date instead of the value */
+  if (strcmp (name, SVN_PROP_TEXT_TIME) == 0)
+    {
+      apr_time_t mtime;
+
+      SVN_ERR (svn_io_file_affected_time (&mtime, b->path, b->pool) );
+      propchange->value=svn_string_create( 
+                                          svn_time_to_cstring (mtime, b->pool),
+                                          b->pool );
+    }
+  else
+    {
   propchange->value = value ? svn_string_dup (value, b->pool) : NULL;
+    }
   
   return SVN_NO_ERROR;
 }
=== subversion/libsvn_wc/adm_crawler.c
==================================================================
--- subversion/libsvn_wc/adm_crawler.c  (revision 94)
+++ subversion/libsvn_wc/adm_crawler.c  (local)
@@ -36,6 +36,7 @@
 #include "svn_base64.h"
 #include "svn_delta.h"
 #include "svn_path.h"
+#include "svn_time.h"
 
 #include "wc.h"
 #include "adm_files.h"
@@ -107,12 +108,23 @@
   SVN_ERR (svn_wc_entry (&entry, file_path, adm_access, FALSE, pool));
   assert(entry != NULL);
 
-  /* Possibly set timestamp to last-commit-time. */
+  /* Possibly set timestamp to last-commit-time or, if defined,
+   * the last modification-time. */
   if (use_commit_times && (! special))
     {
-      SVN_ERR (svn_io_set_file_affected_time (entry->cmt_date,
+      const svn_string_t *mtime;
+
+      SVN_ERR (svn_wc_prop_get (&mtime, SVN_PROP_TEXT_TIME, 
+                                file_path, adm_access, pool));
+
+      if (mtime)
+        SVN_ERR (svn_time_from_cstring (&tstamp, mtime->data, pool));
+      else
+      tstamp = entry->cmt_date;
+
+
+      SVN_ERR (svn_io_set_file_affected_time (tstamp,
                                               file_path, pool));
-      tstamp = entry->cmt_date;
     }
   else
     {
=== subversion/libsvn_wc/adm_ops.c
==================================================================
--- subversion/libsvn_wc/adm_ops.c  (revision 94)
+++ subversion/libsvn_wc/adm_ops.c  (local)
@@ -40,6 +40,7 @@
 #include "svn_io.h"
 #include "svn_md5.h"
 #include "svn_xml.h"
+#include "svn_time.h"
 
 #include "wc.h"
 #include "log.h"
@@ -1310,7 +1311,16 @@
              than the 'now' time that already exists. */
           if (use_commit_times && (! special))
             {
-              SVN_ERR (svn_io_set_file_affected_time (entry->cmt_date,
+              const svn_string_t *mtime;
+
+              SVN_ERR (svn_wc_prop_get (&mtime, SVN_PROP_TEXT_TIME, 
+                                        fullpath, adm_access, pool));
+
+              tstamp = entry->cmt_date;
+              if (mtime)
+                svn_time_from_cstring ( &tstamp, mtime->data, pool);
+
+              SVN_ERR (svn_io_set_file_affected_time (tstamp,
                                                       fullpath, pool));
               tstamp = entry->cmt_date;
             }
=== subversion/libsvn_wc/update_editor.c
==================================================================
--- subversion/libsvn_wc/update_editor.c  (revision 94)
+++ subversion/libsvn_wc/update_editor.c  (local)
@@ -525,6 +525,7 @@
      that comes through as an 'entry prop', and will be used to set
      the working file's timestamp if it's added.  */
   const char *last_changed_date;
+  svn_boolean_t last_changed_is_for_entry;
 
   /* Bump information for the directory this file lives in */
   struct bump_dir_info *bump_info;
@@ -1695,9 +1696,17 @@
 
   /* Special case: if the file is added during a checkout, cache the
      last-changed-date propval for future use. */
-  if (eb->use_commit_times
-      && (strcmp (name, SVN_PROP_ENTRY_COMMITTED_DATE) == 0))
+  if (eb->use_commit_times && value)
+    {
+      if ( (strcmp (name, SVN_PROP_TEXT_TIME) == 0) )
+        {
     fb->last_changed_date = apr_pstrdup (fb->pool, value->data);
+          fb->last_changed_is_for_entry = 1;
+        }
+      if ( (strcmp (name, SVN_PROP_ENTRY_COMMITTED_DATE) == 0) &&
+           !fb->last_changed_is_for_entry)
+        fb->last_changed_date = apr_pstrdup (fb->pool, value->data);
+    }
 
   return SVN_NO_ERROR;
 }
