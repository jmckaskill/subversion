These are tasks that break down along clean interface boundaries --
everything here will get done eventually, but volunteers will make it
happen faster! :-)  Please email dev@subversion.tigris.org if you want
to take something on.

1. CVS->SVN repository conversion program (or script, whatever).
   Bob Miller <kbob@jogger-egg.com> is working on this, see
   tools/cvs2svn/.


2. Configuring in the presence / absence of Berkeley DB

   At the moment, configure.in invokes SVN_CHECK_BERKELEY_DB, which
   compiles, links, and runs a program against the Berkeley DB
   library.  If this process succeeds, that should demonstrate that
   the compiler can find both the header files and the object
   libraries for the DB.  When the program runs, it checks for a
   sufficiently new version of the library, so we should be protected
   from version skew.

   However, if an appropriate version of Berkeley DB is not present,
   then we needn't abort the whole configuration, which is what
   happens now.  Only the server-side code requires Berkeley DB, so we
   could simply disable those modules, and continue to configure the
   client side.

   A second issue: there's little agreement between operating systems
   as to where Berkeley DB and its headers should be installed.

   - If you build and install Berkeley DB from source, it puts
     everything in /usr/local/lib and /usr/local/include.  For some
     reason, GCC searches /usr/local/lib by default, but not
     /usr/local/include.

   - On FreeBSD, the header files live in /usr/local/include/db3.  But
     there is also another header file /usr/include/db.h, which
     apparently we shouldn't use.

   The configure script should accomodate this diversity.


3. Make the working copy library actually use the vdelta code that has
   been so patiently waiting. 


4. Make the working copy library property handling code work.


5. Hook the fs into Apache (becomes higher priority after Milestone 1
   on October 7th).


6. Start writing a basic command-line client, to talk over the network
   to the Apache-connected Subversion server (see 5).


