These are tasks that break down along clean interface boundaries --
everything here will get done eventually, but volunteers will make it
happen faster! :-)  Please email dev@subversion.tigris.org if you want
to take something on.

1. Binary diffing engine.

   Produces a diff that will turn Source into Target, where the size
   of the diff is proportional to the change (i.e., not a line-based
   text diff, but a real binary diff).  The interface would be
   something like this:

      apr_status_t make_bdiff (apr_file_t **out,
                               apr_file_t *seekable_src, 
                               apr_file_t *streamy_target);

   Josh MacDonald's xdelta might be a good place to start
   (see http://www.xcf.berkeley.edu/~jmacd/xdelta.html), although it
   would be even better to make it use the vcdiff format described in
   http://www.ietf.org/internet-drafts/draft-korn-vcdiff-01.txt.
   Or, just implementing the vdelta algorithm directly wouldn't be so
   hard.  It's described in

       "Delta Algorithms: An Empirical Analysis"

       Hunt, J. J., Vo, K.-P., and Tichy, W. F.
       An empirical study of delta algorithms.
       Lecture Notes in Computer Science 1167 (July 1996), 49-66.

   (We have this in PostScript format, mail jimb@redhat.com or
   kfogel@collab.net if you want a copy).


2. CVS->SVN repository conversion program (or script, whatever)

   This probably can't be started until the versioning filesystem is
   substantially complete, but is completely parallelizable then.
   Remember to get branches right. :-)


3. Autoconf Robustifying

   a) Berkeley DB 

      Right now, we have an m4 macro that checks that libdb.so >=3.14.
      We need this script to be smart enough to *locate* both the
      library and header file, no matter where they're installed.

      ...i.e. the GNU linker doesn't automatically search
      /usr/local/lib, although this is often where libdb lives.  

      ...i.e. the compiler can't find "db.h" even though it's sitting
      inside /usr/local/include/db3/ on my FreeBSD system.  And
      because it's a BSD system, how do we know *not* to use the
      system header /usr/include/db.h?

     You get the idea.  :)

