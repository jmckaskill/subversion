
top_builddir = .
top_srcdir = @top_srcdir@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
VPATH = @top_srcdir@

SVN_RA_LIB_DEPS = @SVN_RA_LIB_DEPS@
SVN_RA_LIB_LINK = @SVN_RA_LIB_LINK@

EXTERNAL_PROJECT_DIRS = neon apr

SVN_APR_LIBS = @SVN_APR_LIBS@

SVN_DB_LIBS = @SVN_DB_LIBS@

LIBS = @LIBS@

prefix = @prefix@
exec_prefix = @exec_prefix@
libdir = @libdir@
sbindir = @sbindir@
bindir = @bindir@
includedir = @includedir@

### should search for these...
MAKEINFO = makeinfo
TEXI2DVI = texi2dvi
DVIPS = dvips
DVIPDF = dvipdf

CC = @CC@

LIBTOOL = $(SHELL) $(abs_builddir)/libtool
LTFLAGS = --silent
LT_LDFLAGS =

INCLUDES = @SVN_INCLUDES@ @SVN_APR_INCLUDES@ @SVN_NEON_INCLUDES@ \
		@SVN_EXPAT_INCLUDES@ @SVN_DB_INCLUDES@

APACHE_INCLUDES = @APACHE_INCLUDES@
APACHE_TARGET = @APACHE_TARGET@
INSTALL_APACHE_RULE = @INSTALL_APACHE_RULE@

MKDIR = @MKDIR@

CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS =

COMPILE = $(CC) $(CPPFLAGS) $(CFLAGS) $(INCLUDES)
LT_COMPILE = $(LIBTOOL) $(LTFLAGS) --mode=compile $(COMPILE) -o $@ -c $<

COMPILE_APACHE_MOD = $(LIBTOOL) $(LTFLAGS) --mode=compile $(CC) $(CFLAGS) $(APACHE_INCLUDES) $(INCLUDES) -o $@ -c $<

LINK = $(LIBTOOL) $(LTFLAGS) --mode=link $(LT_LDFLAGS) $(COMPILE) $(LDFLAGS) -rpath $(libdir)

INSTALL = @INSTALL@
INSTALL_LIB = $(LIBTOOL) --mode=install $(INSTALL)
INSTALL_BIN = $(LIBTOOL) --mode=install $(INSTALL)
INSTALL_SBIN = $(LIBTOOL) --mode=install $(INSTALL)
INSTALL_INCLUDE = $(INSTALL) -m 644
INSTALL_MOD_SHARED = @APXS@ -i -a
INSTALL_MOD_STATIC = $(INSTALL) -m 644

all: external-all local-all
clean: external-clean local-clean
distclean: external-distclean local-distclean
extraclean: external-extraclean local-extraclean
install: external-install local-install

@INCLUDE_OUTPUTS@

local-all: libs programs @FS_RULES@ @BUILD_APACHE_RULE@

local-clean:
	@list='$(BUILD_DIRS)'; for i in $$list; do \
	    echo "Cleaning $$i ..." ; \
	    (cd $$i && rm -f *.o *.lo *.la *.la-a && rm -rf .libs) ; \
	done
	rm -f $(CLEAN_FILES)

local-distclean: local-clean
	rm -f Makefile config.cache config.log config.status libtool \
		svn_private_config.h

local-extraclean: local-distclean
	rm -f build-outputs.mk svn_private_config.h.in configure \
		ac-helpers/config.guess ac-helpers/config.sub \
		ac-helpers/libtool.m4 ac-helpers/ltconfig \
		ac-helpers/ltmain.sh

local-install: install-lib install-include install-bin install-sbin \
		$(INSTALL_APACHE_RULE)

### the chmod really sucks, but some repository files don't have it like
### they should ...
check: $(TEST_DEPS)
	@logfile=`pwd`/tests.log ; \
	echo > $$logfile ; \
	failed=no ; \
	list='$(TEST_PROGRAMS)'; for prog in $$list; do \
	    chmod a+x $$prog ; \
	    progbase=`echo $$prog | sed 's?.*/??'` ; \
	    progdir=`echo $$prog | sed 's?/[^/]*$$??'` ; \
	    echo ; \
	    echo -n "Running all sub-tests in $$progbase..." ; \
	    echo "START: $$progbase" >> $$logfile ; \
	    (cd $$progdir && ./$$progbase $(abs_srcdir)) >> $$logfile ; \
	    if test $$? -eq 0; then \
		echo "SUCCESS" ; \
	    else \
		failed=yes; \
		echo "FAILED" ; \
		echo "--- at least one sub-test FAILED, check tests.log." ; \
	    fi; \
	    echo "END: $$progbase" >> $$logfile ; \
	    echo >> $$logfile ; \
	done ; \
	if test "$$failed" = "yes"; then \
	    grep FAIL $$logfile || /bin/true ; \
	fi

mkdir-init:
	@list='$(BUILD_DIRS)'; for i in $$list; do \
	    echo "$(MKDIR) $$i" ; \
	    $(MKDIR) $$i ; \
	done

# recursive targets to handle external projects (e.g. APR, Neon)
external-all external-clean external-distclean external-install:
	@target=`echo $@ | sed s/external-//`; \
	list='$(EXTERNAL_PROJECT_DIRS)'; \
	for i in $$list; do \
	    echo "------ making $$target in $$i"; \
	    (cd $$i && $(MAKE) $$target) || exit 1; \
	    echo "------ completed $$target in $$i"; \
	done;

### temporary hack. Neon does not have an "extraclean"
external-extraclean:
	@list='$(EXTERNAL_PROJECT_DIRS)'; \
	for i in $$list; do \
	    if test "$$i" != "neon"; then \
		echo "------ making extraclean in $$i"; \
		(cd $$i && $(MAKE) extraclean) || exit 1; \
		echo "------ completed extraclean in $$i"; \
	    fi; \
	done;

## Use Karl's script to create a Changelog from CVS.

log: changelog

ChangeLog: changelog

changelog:
	cvs2cl.pl --fsf -b -t -r -S -U ./AUTHORS      \
            subversion doc www expat-lite notes tools \
            `find . -type f -maxdepth 1`

doc: doc-info doc-txt doc-html

doc-info: doc/programmer/design/svn-design.info
doc-dvi: doc/programmer/design/svn-design.dvi
doc-txt: doc/programmer/design/svn-design.txt
doc-html: doc/programmer/design/svn-design.html
doc-ps: doc/programmer/design/svn-design.ps
doc-pdf: doc/programmer/design/svn-design.pdf

#
# Implicit rules for creating outputs from input files
#
.SUFFIXES:
.SUFFIXES: .c .lo .o .la-a .la .texi .info .dvi .txt .html .ps .pdf

.c.o:
	$(COMPILE) -o $@ -c $<

.c.lo:
	$(LT_COMPILE)

.la.la-a:
	sed "/library_names/s/'.*'/''/" $< > $@


.texi.info:
	rm -f $@ $@-[0-9] $@-[0-9][0-9]
	$(MAKEINFO) -I $(top_srcdir)/doc -o $@ $< 

.texi.dvi:
	$(TEXI2DVI) -I $(top_srcdir)/doc/programmer/design $<

.texi.txt:
	$(MAKEINFO) -I $(top_srcdir)/doc/programmer/design --no-headers -o $@ $<

.texi.html:
	$(MAKEINFO) -I $(top_srcdir)/doc/programmer/design --no-headers --html -o $@ $<

.dvi.ps:
	$(DVIPS) $< -o $@

.dvi.pdf:
	$(DVIPDF) $< $@
