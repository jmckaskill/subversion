This file tracks the status of changes proposed for inclusion in 1.0.
Each candidate consists of a short identifying block (e.g., a revision
number, maybe an issue number), a brief description of the change, an
at-most-one-line justification of why it should be in 1.0, perhaps
some notes/concerns, and finally the votes.  The notes and concerns
are meant to be brief summaries to help a reader get oriented; please
don't use the STATUS file for actual discussion, use the dev@ list or
irc instead.

Here's an example, probably as complex as an entry would ever get:

   * r98765 (issue #56789)
     Make commit editor take a closure object for future mindreading.
     Justification: API stability, as prep for future enhancement.
     Notes: There was consensus on the desirability of this feature in
       the near future; see thread at http://... (Message-Id:
       blahblahblah).
     Concerns: Vetoed by jerenkrantz due to privacy concerns with the
       implementation; see thread at http://... (Message-Id: blahblahblah)
     Votes:
       +1: ghudson, bliss
       +0: cmpilato
       -0: gstein
       -1: jerenkrantz

A change needs three +1 votes from full committers (or partial committers
with access to the involved paths), and no vetoes, to go into the release.

If you cast a veto (i.e. -1), please state the reason in the concerns
field, and include a url / message-id for the list discussion if any.
You can go back and add the link later if the thread isn't available
at the time you commit the veto.

Voting +1 on a change doesn't just mean you approve of it in principle.
It means you have thoroughly reviewed the change, and find it correct
and as nondisruptive as possible.  When it is committed to the release
branch, the log message will include the names of all who voted for
it, as well as the original author and the person making the commit.
All of these people are considered equally answerable for bugs.

If you've reviewed a patch, and like it but have some reservations,
you can write "+1 (concept)" and then ask questions on the list about
your concerns.  You can write "+0" if you like the general idea but
haven't reviewed the patch carefully.  Neither of these votes counts
toward the total, but they can be useful for tracking down people who
are following the change and might be willing to spend more time on
it.

There is a somewhat looser system for the bindings and tools areas,
because they are not core code, and because there are usually fewer
experts available to review changes there.  A change to bindings or
tools can go in with a +1 from a full committer or a partial committer
for that area, at least one "+0" or "concept +1" from any other
committer, and no vetoes.  We trust people to use their judgment and
not review changes if they don't have some competence to do so.  The
goal is to ensure there are at least two pairs of eyes on the change,
without demanding that every reviewer have the same amount of
expertise as the area maintainer.  This way one can review for general
sanity, accurate comments, obvious mistakes, etc, without being forced
to assert "Yes, I understand these changes in every detail and have
tested them."

-*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*-

Core changes that don't have three +1's yet, or have a veto.  (If you
make the threshold vote on one of these items, please move it to the
section for approved changes.)


    * Issue #1705
      Exorcise apr_off_t.
      Justification: It's a big headache we want to get rid of
      now.  Creates crashes with the perl bindings.
      Notes: breser (I'd vote for this but I don't think my
                     vote counts).
      Votes:
       +1: ghudson
       -1: bliss (The current patch [#2] has bugs. See the issue tracker!)

    * r8394
      Add capability to build Subversion Perl bindings RPM.
      Justification: Additional capability.
      Notes:
      Votes:
       +1: david

    * r8463  (fix for issue #1709)
      Make mod_dav_svn stop spewing huge responses at dead sockets.
      Justification:  serious DoS attack potential!
      Notes: looks like a big change, but it's mainly adding
             error-checking code to mod_dav_svn.
      Votes:
       +1: cmpilato


Core changes that already have three +1 votes and no vetos.  (If you
veto something below, or remove a threshold vote, please move it to
the section for unapproved changes.)

   [none pending]

-*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*-

These changes are to Subversion bindings.  Many are dependent on
specific "core" changes in the previous section, so we're planning to
finalize this list (and its votes) after we know the core changes,
that is, after Thursday, Jan. 8th 2004.

Bindings changes that affect the build system:

    * r8368, r8417, r8418, r8438, r8439, r8440, r8441, r8442
     Support SWIG 1.3.20 and newer and require at least 1.3.19.
     Justification: An increasingly common version of SWIG that we need
                    to support.  And have proper requirements.
     Notes: This time it should be complete.
     Votes:
      +1: breser
      +1 (concept and build system changes): ghudson
     
Bindings changes that don't affect the build system:

[none pending]

-*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*-

These changes are to Subversion tools that do not use the bindings.
As such, they may be updated independently of any "core" or API
changes.

    * r8357, r8364
      Make svn_load_dirs.pl printed output easier to use.
      Add default answers to yes no questions.
      Justification: Improve display, ease of use, low risk.
      Votes:
       +1: blair
