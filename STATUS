      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS OPEN TO BUG FIXES.          *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.6.x line.

See "Stabilizing and maintaining releases" in trunk/www/hacking.html for
details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.6.3:
================

Candidate changes:

 * r36298
   A minor test suite plumbing fix to make fixing a bad backport easier.
   Justification:
     See http://svn.haxx.se/dev/archive-2009-06/0124.shtml.
   Votes:
     +1: pburba
 
 * r37478, r37543, r37544, r37545, r37547
   Support using `svnversion` on files and improve some messages printed by
   `svnversion`.
   Justification:
     Some messages printed by `svnversion` are inconsistent and sometimes
     incorrect:
     $ svnversion /usr
     exported
     $ svnversion /bin/ls
     '/bin/ls' not versioned, and not exported
     $ svnversion VERSIONED_FILE
     'VERSIONED_FILE' not versioned, and not exported
     $ svnversion /nonexistent
     subversion/libsvn_wc/questions.c:90: (apr_err=2)
     svn: '/nonexistent' does not exist
     ^^^
     Messages with these revisions backported:
     $ svnversion /usr
     Unversioned directory
     $ svnversion /bin/ls
     Unversioned file
     $ svnversion VERSIONED_FILE
     NUMBER
     $ svnversion /nonexistent
     '/nonexistent' doesn't exist
   Votes:
     +1: arfrever
     -0: rhuijben, cmpilato (Introduces new features and changes output)

 * r37972
   Avoid temp file name collisions when committing with ra_serf/ra_neon.
   Justification:
     Greatly improves performance when committing large numbers of items,
     see http://svn.haxx.se/dev/archive-2009-05/0575.shtml.
   Votes:
     +1: pburba, stsp

 * r37868, r37979
   Fix memory leak in svn_hash_read2 and svn_hash_read_incremental by
   using an iterpool for temporary allocations.
   Justification:
     This is a classic case for using an iterpool.  Without this change
     memory use can get out of hand when reading hashes with large
     values, e.g. think multi-10s-of-MB properties (Yes, I know people
     *shouldn't* use prop vals that big, but enforcing it through OOM
     failure is not the way to go).  In my own quick testing, committing
     a 50MB property without this patch caused httpd memory to peak at
     683 MB, with the patch peak memory use drops to 407 MB.
   Votes:
     +1: pburba

Approved changes:
=================
