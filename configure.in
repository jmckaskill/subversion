dnl Process this file with autoconf to produce a configure script.

dnl Autoconfiscation for Subversion

dnl General Setup -----------------------

dnl First line is *required*;  sanity-checks that the our src dir exists.
AC_INIT(subversion/include/svn_types.h)
AC_CONFIG_AUX_DIR(ac-helpers)

abs_srcdir="`cd $srcdir && pwd`"
abs_builddir="`pwd`"

dnl $MKDIR is required for configuring apr and neon in a vpath build
MKDIR="$abs_srcdir/apr/build/mkdir.sh"

dnl APR defines a number of useful autoconf macros. grab them.
sinclude(apr/build/apr_common.m4)

dnl Grab our own macros
sinclude(ac-helpers/berkeley-db.m4)
sinclude(ac-helpers/svn-apache.m4)
sinclude(ac-helpers/svn-define-libs.m4)
sinclude(ac-helpers/svn-macros.m4)

dnl Grab the libtool macros
sinclude(ac-helpers/libtool.m4)

dnl Generate config.nice early (before the args are munged)
SVN_CONFIG_NICE(config.nice)

dnl Required to init all of the `automake' macros, and to run typical macros
#AM_INIT_AUTOMAKE(subversion, "M2 (pre-alpha)", no-define)

dnl AC_CONFIG_HEADER causes `autoheader' to produce svn_private_config.h.in for us.
dnl   (We can add custom defines by creating ./acconfig.h if we wish.)
AC_CONFIG_HEADER(svn_private_config.h)

dnl Todo: we're English-only now, but GNU Gettext eventually?
dnl Set of available languages.
dnl ALL_LINGUAS="de fr es ko nl no pl pt sl sv"

dnl Sub-package configuration ---------------------

dnl Possibly reconfigure packages in subdirectories
AC_ARG_ENABLE(subdir-config,
  [  --disable-subdir-config  do not reconfigure packages in subdirectories ],
  [ ],
  enable_subdir_config=yes)

if test "$enable_subdir_config" = "yes"; then
  APR_SUBDIR_CONFIG(apr)
  APR_SUBDIR_CONFIG(neon, --with-expat="$abs_srcdir/expat-lite/libexpat.la")
fi


dnl Get libraries and thread flags from APR ---------------------

if test -f "$abs_builddir/apr/APRVARS"; then
  . "$abs_builddir/apr/APRVARS"
  CPPFLAGS="$CPPFLAGS $EXTRA_CPPFLAGS"
  CFLAGS="$CFLAGS $EXTRA_CFLAGS"
  LIBS="$LIBS $EXTRA_LIBS"
else
  AC_MSG_ERROR([Must configure APR before Subversion.])
fi


dnl Set include dir and module library lists for Makefiles -----------------

dnl Top level
SVN_INCLUDES='-I$(top_srcdir)/subversion/include -I$(top_builddir)'
AC_SUBST(SVN_INCLUDES)

dnl define all the library macros
SVN_DEFINE_LIBS

dnl APR
SVN_APR_INCLUDES=-I'$(top_srcdir)/apr/include'
if test "$abs_srcdir" != "$abs_builddir"; then
  SVN_APR_INCLUDES='-I$(top_builddir)/apr/include '"$SVN_APR_INCLUDES"
fi
AC_SUBST(SVN_APR_INCLUDES)
SVN_APR_LIBS='$(top_builddir)/apr/libapr.la '"$LIBTOOL_LIBS"
AC_SUBST(SVN_APR_LIBS)

dnl Expat
SVN_EXPAT_INCLUDES='-I$(top_srcdir)/expat-lite'
AC_SUBST(SVN_EXPAT_INCLUDES)

dnl Neon
SVN_NEON_INCLUDES=-'I$(top_srcdir)/neon/src'
AC_SUBST(SVN_NEON_INCLUDES)
SVN_NEON_LIBS='$(top_builddir)/neon/src/libneon.la'
AC_SUBST(SVN_NEON_LIBS)

dnl tests
SVN_TESTS_MAIN_LIBS='$(top_builddir)/subversion/tests/libsvn_test.la'
AC_SUBST(SVN_TESTS_MAIN_LIBS)


dnl Check for programs ---------------------

dnl Look for a C compiler
AC_PROG_CC

dnl See if 'ln -s' works
AC_PROG_LN_S

dnl Check for libtool -- we'll definitely need it for all our shared libs!
echo "configuring libtool now"
AC_PROG_LIBTOOL

dnl find Apache
SVN_FIND_APACHE

dnl ### should we ever bother with the system install?
INSTALL="$abs_srcdir/apr/build/install.sh"
AC_SUBST(INSTALL)

dnl use APR's mkdir to enable creating intervening directories
AC_SUBST(MKDIR)

dnl Check for libraries --------------------

dnl AC_CHECK_LIB() calls go here, if we ever need any

# Build the filesystem library (and repository administration tool)
# only if we have an appropriate version of Berkeley DB.
SVN_FS_WANT_DB_MAJOR=3
SVN_FS_WANT_DB_MINOR=2
SVN_FS_WANT_DB_PATCH=9
SVN_LIB_BERKELEY_DB($SVN_FS_WANT_DB_MAJOR, $SVN_FS_WANT_DB_MINOR,
                    $SVN_FS_WANT_DB_PATCH)

# Make this conditional so it can be used by modules who simply want to
# know if the filesystem stuff is expected to be available to build upon.
#AM_CONDITIONAL(BUILD_FS_STUFF, test "$svn_lib_berkeley_db" = "yes")

if test "$svn_lib_berkeley_db" = "yes"; then
  FS_BASED_DIRS="libsvn_fs libsvn_repos libsvn_ra_local svnadmin"
  FS_BASED_TESTS="libsvn_fs libsvn_repos libsvn_ra_local"
  FS_RULES="fs-libs fs-programs"
fi
AC_SUBST(FS_BASED_DIRS)
AC_SUBST(FS_BASED_TESTS)
AC_SUBST(FS_RULES)

AC_DEFINE_UNQUOTED(SVN_FS_WANT_DB_MAJOR, $SVN_FS_WANT_DB_MAJOR,
                   [The desired major version for the Berkeley DB])
AC_DEFINE_UNQUOTED(SVN_FS_WANT_DB_MINOR, $SVN_FS_WANT_DB_MINOR,
                   [The desired minor version for the Berkeley DB])
AC_DEFINE_UNQUOTED(SVN_FS_WANT_DB_PATCH, $SVN_FS_WANT_DB_PATCH,
                   [The desired patch version for the Berkeley DB])

dnl Check for header files ----------------

dnl Standard C headers
AC_HEADER_STDC

dnl Check for typedefs, structures, and compiler characteristics ----------

dnl if compiler doesn't understand `const', then define it empty
AC_C_CONST

dnl if non-existent, define size_t to be `unsigned'
AC_TYPE_SIZE_T


dnl Check for library functions ----------

dnl libsvn_string uses memcmp()
AC_FUNC_MEMCMP

dnl svn_error's default warning handler uses vfprintf()
AC_FUNC_VPRINTF


dnl Process some configuration options ----------

AC_ARG_ENABLE(debug,
[  --enable-debug            Turn on debugging and compile time warnings],
[enable_debugging=yes])

AC_ARG_ENABLE(maintainer-mode,
[  --enable-maintainer-mode  Turn on debugging and very strict compile-time
                          warnings],
[
    enable_debugging=yes
    if test "$GCC" = "yes"; then
      dnl SVN_DEBUG enables specific features for developer builds
      dnl AP_DEBUG enables specific (Apache) features for developer builds
      CFLAGS="$CFLAGS -Wpointer-arith -Wwrite-strings -Wshadow -DSVN_DEBUG -DAP_DEBUG";
    fi
])

if test "$enable_debugging" = "yes"; then
  dnl At the moment, we don't want optimization, because we're
  dnl debugging.
  dnl ### actually, debugging should be fine with the default -O2
  changequote(,)
  CFLAGS="`echo $CFLAGS' ' | sed -e 's/-O[^ ]* //'`"
  changequote([,])
fi


dnl Find a default diff program
AC_PATH_PROG(SVN_CLIENT_DIFF, diff, diff)
AC_DEFINE_UNQUOTED(SVN_CLIENT_DIFF, "$SVN_CLIENT_DIFF", 
	[Define to be the full path to your diff program])

dnl Find a default patch program
AC_PATH_PROG(SVN_CLIENT_PATCH, patch, patch)
AC_DEFINE_UNQUOTED(SVN_CLIENT_PATCH, "$SVN_CLIENT_PATCH", 
	[Define to be the full path to your patch program])

dnl Since this is used only on Unix-y systems, define the path separator as '/'
AC_DEFINE_UNQUOTED(SVN_PATH_LOCAL_SEPARATOR, '/',
        [Defined to be the path separator used on your local filesystem])

dnl decide whether we want to link against the RA libraries
if test "$enable_shared" = "no"; then
  AC_DEFINE(SVN_LIBSVN_CLIENT_LINKS_RA_DAV, 1,
        [Defined if libsvn_client should link against libsvn_ra_dav])
  LIBSVN_CLIENT_DEPS="$SVN_LIBSVN_RA_DAV_LIBS $SVN_NEON_LIBS"

  if test "$svn_lib_berkeley_db" = "yes"; then
    AC_DEFINE(SVN_LIBSVN_CLIENT_LINKS_RA_LOCAL, 1,
        [Defined if libsvn_client should link against libsvn_ra_local])
    LIBSVN_CLIENT_DEPS="$LIBSVN_CLIENT_DEPS $SVN_LIBSVN_RA_LOCAL_LIBS $SVN_LIBSVN_REPOS_LIBS $SVN_LIBSVN_FS_LIBS"
  fi

fi
AC_SUBST(LIBSVN_CLIENT_DEPS)


dnl Pass some config data ----------------------------

AC_DEFINE_UNQUOTED(SVN_VERSION, "$VERSION", [Version number of Subversion])

AC_SUBST(abs_builddir)

dnl
dnl BSD/OS (BSDi) needs to use a different include syntax in the Makefiles
dnl
case "$host_alias" in
*bsdi*)
    # Check whether they've installed GNU make
    if make --version > /dev/null 2>&1; then 
	INCLUDE_OUTPUTS="include build-outputs.mk"
    else
	# BSDi make
	INCLUDE_OUTPUTS=".include \"build-outputs.mk\""
    fi
    ;;
*)
    INCLUDE_OUTPUTS="include build-outputs.mk"
    ;;
esac
AC_SUBST(INCLUDE_OUTPUTS)

dnl Final step:  create the Makefile ----------------------------

AC_OUTPUT([Makefile])


dnl  Print warning messages about what we did and didn't configure at the 
dnl  end, where people will actually see them.
case "$svn_lib_berkeley_db" in
  "no" )
    echo 1>&2
    AC_MSG_WARN([we have configured for a client-only build


the Subversion filesystem library, part of
the server, requires Berkeley DB version 3.2.9 or newer, which you
don't seem to have installed.  We have created makefiles which will
build the Subversion client code only, and skip the server.
You can find latest version of Berkeley DB at http://www.sleepycat.com.
You can find the latest version of Berkeley DB here:
http://www.sleepycat.com/update/3.2.9/db-3.2.9.tar.gz
])
;;
esac

