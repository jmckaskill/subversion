
# Here is a sample `svn.conf'.  

# This file lives outside of any repository (e.g. /etc/svn.conf), and
# contains general server-side policies that are solely within the
# jurisdiction of the Subversion server administrator -- *not* users.
#
# This file would be passed to svn_svr_init() when initializing the
# Subversion Server.  
#
# --------------------------------------------------------------------

# Feature 1:  Repository aliases

# It's a drag to remember a full pathname to a repository.  Let's
# allow aliases.  In fact, let's set a client-side convention of
# *always* using repository aliases, so that server admins can move
# repositories around on disk without anyone knowing!

# HASH = "repos_alias" :  KEY = full path : VAL = list of aliases

repos_alias : /usr/local/svn/tigris : tigris, tigr
repos_alias : /home/sussman/svnrepos : svnben, bensvn, fweebop

# ----------------------------------------------

# Feature 2:  Loadable server-side ``plug-ins''

# HASH = "plugin" : KEY = list of new methods : VAL = library

plugin : basic-security : /usr/local/lib/svn/plugin_security.so
plugin : annotate : /usr/local/lib/svn/plugin_annotate.so
plugin : grep, find : /usr/svn/plugin_grep.so
plugin : execute-guile : /home/kfogel/svn/plugin_guile.so
plugin : smartmerge : /pub/plugin_smartmerge.so

# ----------------------------------------------

# Feature 3:  High-Level Access Restrictions

# The Subversion filesystem already enforces its own ACLs.  However,
# the server administrator should still have broad, overriding power
# over repositories.  Rather than modify particular ACLs in a
# filesystem, the server can enforce general access restrictions
# *before* passing calls to the filesystem.

# HASH = "security" : KEY = command name : VAL = arguments to command

# The server can send annoying MOTDs.

security : motd : "Welcome to our SVN repository!"

# Temporarily take an entire repository "off-line" (for backup,
# perhaps) without shutting down access to other repositories.

security : offline : tigris

# Temporarily block access from a particular user, authentication
# method, or domain.  This is just dumb regexp matching on the fields
# in the `svn_user_t' object that the network layer hands to the
# server library.

# anonymous user can't access tigris repos
security : block : anonymous/*/*, tigris

# microsoft folks can't access this repos
security : block : */*/microsoft*, svnben

# no SMTP access allowed to any repository
security : block : */smtp/*, *
