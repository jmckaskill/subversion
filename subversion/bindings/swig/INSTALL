								-*-text-*-

BUILDING SWIG BINDINGS FOR SVN


Step 1:  Build & install the proper version of SWIG (which is
         currently swig 1.3.14 or greater).

    * Go to http://www.swig.org, download the sourceball, unpack.

    * In the SWIG-X.X.X directory, run ./configure.

       If you plan to build the python bindings, and have a system
       with more than one version of python installed, you may need
       to pass

             --with-python=/path/to/correct/python/binary
 
       to the configure script.  You certainly don't want to use any
       version of python older than 2.0.

    * run 'make && make install'

    * To verify you have the goodz installed, check that these things
      were created, assuming your $PREFIX was /usr/local/lib:

           - /usr/local/lib/swig1.3/*.i
           - /usr/local/lib/libswig*.so
           - /usr/local/bin/swig

      In particular, you want to make sure that libswig_py.so was
      built and installed, since the python bindings are the most-used
      ones at the moment.


Step 2:  Build and Install Subversion.

  See Subversion's own INSTALL file for details.

  Make sure that Subversion's ./configure script sees your installed SWIG!
  It tries to detect SWIG near the very end of its output.

  If Subversion's ./configure finds a SWIG that it's happy with, then
  it will build a special glue library to link svn to the swig-python
  bindings:  libsvn_swig_py.so (as well as any other languages).


SPECIFIC LANGUAGE BINDINGS


*  Python

   1.  On Unix systems, run 'make swig-py-ext' from the top of the
       Subversion source tree.  This will invoke SWIG on the *.i
       files, resulting in a collection of .c source files.  It will
       then compile those .c files into Python libraries.

       On Windows, ???

   2.  On Unix systems, run 'make install-swig-py-ext' (as root,
       typically) from the top of the Subversion source tree.  This
       will copy your new Python libraries into the appropriate system
       location.

       On Windows, ???

   3.  Verify that an 'svn' package has been created.  It should be
       sitting right in the current directory:  a subdir containing
       .py files and an __init__.py.  Also verify that the package was
       installed to a public area.  (For example, some place like
       /usr/local/lib/python2.2/site-packages/svn)

   4.  Try some demo programs.  From the top of your svn working copy,
       cd tools/examples/, and try running 'svnlook.py'.



*  Java?


*  Perl?


TROUBLESHOOTING FAQ

* "When I 'make swig-py-ext', I see this error:
       ld: can't locate file for: -lsvn_swig_py-1"

    This means that step 2 (above) failed.  Subversion's ./configure
    script probably didn't find a suitable SWIG installation, and thus
    never built/installed libsvn_swig_py.so.

