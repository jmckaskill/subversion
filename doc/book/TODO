This is a -*- text -*- file.

Here is a list of all the things that the Subversion Book DOESN'T yet cover.

--------------------------------------------------------------

Stuff that needs more discussion:

  - 'svn diff/merge --ignore-ancestry'.  Demonstrate how this switch
    can be used as an alternate strategy for vendor branching (instead
    of using svn_load_dirs.pl): just import each new vendor release
    unrelatedly, and apply the diffs to your vendor-branch working copy.

  - (perhaps) suggest the use of environment variables to represent
    long repository URLs.  useful for lots of branching/tagging commands.

--------------------------------------------------------------
To be fixed by someone:

  - svnadmin docs sorely need to be updated.  See Ch05 and Ch08.

--------------------------------------------------------------

To be fixed by cmpilato:

  - convert any Perl examples to Python ones.  and stick with the
    Python coding conventions when doing so.  and do error checking.
    and then chuckle about how the examples are still shorter and
    easier to read than they were before.

  - deltification no longer happens in-process -- repository
    administrators *must* use 'svnadmin deltify', preferably
    backgrounded in the post-commit hook, to keep their repositories
    small.

  - define a 'project root', recommend 'standard' repos layout beneath
    such roots.

  - svndumpfilter.  in particular, show how to "migrate" a subdir in
    one repos to a subdir in another one.  Wherever this ends up
    documented (probably in chapter 5 or 6), please be sure to mention
    how to use svndumpfilter in chapter 4, "removing a change from the
    repository".  At a minimum, create a xref from this part of
    chapter 4 to the *real* svndumpfilter documentation, presumably to
    use-case that shows how to use svndumpfilter as an alternative to
    'svnadmin obliterate.'

  - ch07: maybe an explanation for the person writing a new main()
    application... what are all those callbacks in the ctx_t used for?
    people have asked this in irc.  what sort of things does an
    application *have* to set up in the cxt_t in order to call an
    svn_client_foo() function?

  - I think we need to add a *bit* more background on "how berkeley
    db" works.  It's not clear to most readers 1) what the db logfiles
    are, 2) that they need to be pruned regularly (if not using 4.2),
    3) that they grow *even* if you only do checkouts and updates.
    Ben wrote an email about this which should probably be assimilated
    into ch05:

      http://subversion.tigris.org/servlets/ReadMsg?list=dev&msgNo=38769

    While it's not our job to turn the readers into BDB experts, I
    think this level of information is the exact right level of BDB
    knowledge that users/admins need to use svn well.

  - Also regarding BDB:  make a big point (grey alert box?) about
    *not* accessing repositories directly via network filesystems
    (NFS, SMB, etc.)

  - book says that deleting a ~/.subversion file will recreate it,
    which is wrong.  the whole directory needs to be renamed and recreated.

  - ch06: externals chapter.  Please be explicit about exactly which
    commands honor 'svn:externals' (co, up, st, etc.), and exactly
    which commands don't (commit).

--------------------------------------------------------------

To be fixed by fitz:

  - appendix A: how authentication differs from CVS.  Explain that the
    server challenges, rather than the client explicitly "logging in".

    Also, in 'branches are dirs' section, stress that users would NOT
    want to ever checkout the root of an svn repository.... it would
    be humongous.  Some CVS users have been confused by this.

  - some folks want a glossary.  that's good, since we have a
    glossary.xml anyway.  :-)  probably something we do at the last minute.

  - Check all commands for flags in ch08

  - document the 'autoprops' feature in ~/.subversion/servers


--------------------------------------------------------------

To be fixed by sussman:


  - New "Server Configuration" Chapter:   chapter 5 will still be all
    about repository management:  creation, tuning, BDB maintentance,
    revprops, hooks, etc.  But the subsection currently called
    "networking a repository" will be broken out into a whole
    chapter.   Outline will look something like this:

      * Which server to use?

        - no server is more "official" than any other:  comparison
          chart showing advs/disads of each.

      * client authentication

        - how svn AuthN works in general ('pull' model; how commit
          info is stored in revprops; what an empty svn:author means)

        - authn credential caching: (explain exactly where and when
          stuff gets cached, how to prevent it from being cached, and
          how to invalidate a cache, what --username does/doesn't do)

      * svnserve

        - AuthN options
             - anonymous identification
             - ssh (or generic tunnel) identification
             - builtin cram5 identification
        - AuthZ options
             - access control via ssh (or tunnel):  unix groups
             - access control via built-in authz:  svnserve.conf

      * apache2 + mod_dav_svn

        - SVNPath and SVNParentPath directives
        - AuthN options
             - anonymous identification
             - Basic Auth identification:  AuthUserFile
             - certificate identification:
                 - pointers to apache docs on client/server cert setup
                 - how to manage client/server certs from svn client
        - AuthZ options
             - blanket access control via 'Require' directive
             - per-path access control via mod_authz_svn
       
      * Accessing the repository via multiple methods
 
        - why you'd want to
        - repository perm problems, wrappers, etc.


  - new 'svn diff' UI (when it's done) -- affects ch03, ch08, and
    maybe other chapters.

  - svn merge --dry-run   (different than 'svn diff')

  - ch06: document the log-encoding and use-commit-times variables in
    the [miscellany] section

  - appA should mention no $Log$ keyword.  Or maybe it should mention
    what keywords *do* exist as well.

  - ch04:  new "use-cases" section:

      - resurrecting a deleted file or directory.  (how do I find out
        where the item was deleted?  how to use 'merge' to get it
        back;  how to use 'copy' to get it back.)

      - move use-case to new section:  undoing a committed change.

      - move use-case to new section:  merging one branch to another.
       
  - in httpd.conf setup, remind people not to put the svn <Location>
    within an existing DocumentRoot, else the 301 error.



--------------------------------------------------------------

To be fixed by kfogel:

  - cvs2svn.py is a lot more complex now, with many more switches,
    especially since it now converts branches and tags.  Need to
    expand our coverage of this in Appendix B.



