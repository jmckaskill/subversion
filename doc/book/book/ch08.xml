<!-- This is currently being roughed out.  Suggestions and comments
are more than welcome, but patches are probably a bit premature at
this point. -->
<chapter id="svn-ch-8">
  <title>Subversion Complete Reference</title>
  
  <simplesect>
    <para>This chapter is intended to be a complete reference to using
      Subversion. This includes the command line client
      (<command>svn</command>) and all its commands, repository
      administration programs (<command>svnadmin</command> and
      <command>svnlook</command>) and their respective commands,
      repository configuration files, commit hooks, client
      configuration files, and working copy administrative areas.
    </para>
  </simplesect>
  
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 1 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-1">
    <title>The Subversion Command Line Client:
      <command>svn</command></title>
    
    <para>To use the command line client, you type
      <command>svn</command>, the subcommand you wish to use,
      <footnote><para>Yes, yes, you don't need a subcommand to use the
      <option>--version</option> switch, but we'll get to that in just
      a minute.</para> </footnote> and any switches or targets that
      you wish to operate on.  You should note that there is no
      specific order that the subcommand and the switches must appear
      in (the targets, however, are always last in the command line).
      For example, all of the following are valid ways to use
      <command>svn status</command>:</para>

    <screen>
$ svn -v status
$ svn status -v 
$ svn status -v myfile
    </screen>

    <para>You can find many more examples of how to use most client
      commands, in <xref linkend="svn-ch-3"/>, commands for managing
      properties in <xref linkend="svn-ch-6-sect-2"/></para>
    
    <sect2 id="svn-ch-8-sect-1.1">
      <title>Switches</title> 
      
      <para>While Subversion has different switches for its
        subcommands, all switches are global&mdash;that is, each
        switch is guaranteed to mean the same thing regardless of
        the subcommand you use it with.  For example,
        <option>--verbose</option> (<option>-v</option>) always
        means <quote>verbose output</quote>, regardless of the
        subcommand you use it with.</para>
      
<!-- ###TODO remove *any* command specific stuff and put it in that command. -->
      <variablelist>
        
        <varlistentry>
          <term><option>--dry-run</option></term>
          <listitem>
            <para>Go through all the motions of running a command,
              but make no actual changes&mdash;either on disk or in
              the repository. </para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--file</option>
            <replaceable>FILENAME</replaceable>
            (<option>-f</option>)</term>
          <listitem>
            <para>Use the contents of the file passed as an argument
              to this switch as a commit message for the subcommand
              that you're running.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--encoding</option><replaceable>ENC</replaceable></term>
          <listitem>
            <para>Tells Subversion that your commit message is
              encoded in the charset provided.  The default is UTF8,
              and you should specify the encoding if your commit
              message is in any other encoding.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--extensions</option><replaceable>"ARGS"</replaceable></term>
          <listitem>
            <para>Specifies an argument or arguments that Subversion
              should pass to GNU diff when providing diffs.  Note
              that if you wish to pass multiple arguments, you must
              enclose all of them in quotes.  For example,
              <command>svn diff -x "-b -E"</command>.  Note also
              that Subversion will display unified diffs by default,
              so if you want default diff output, you can pass the
              <option>--normal</option> switch to diff
              (e.g. <command>svn diff -x "--normal"</command>.
              </para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--force</option></term>
          <listitem>
            <para>Forces a particular command or operation to run.
              There are some operations that Subversion will prevent
              you from doing in normal usage, but you can pass the
              force switch to tell Subversion <quote>I know what I'm
              doing as well as the possible repercussions of doing
              it, so let me at 'em.</quote>. This switch is the
              programmatic equivalent of doing your own electrical
              work with the power on&mdash;if you don't know what
              you're doing, you're likely to get a shock.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--help</option> (<option>-h or -?</option>)</term>
          <listitem>
            <para>Shows the built in help text for a subcommand (if
              used with a subcommand), or the general client help if
              used alone.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--incremental</option></term>
          <listitem>
            <para>Prints output in a format suitable for
              concatenation.  For example, <command>svn
              log</command> normally prints out a dashed line at the
              beginning of a log message, after each subsequent log
              message, and following the final log message.  If you
              ran svn log on a range of two revisions, you would get
              this:</para>
<!-- ###TODO move this to svn log's section. -->
            <screen>
$ svn log -r 14:15
------------------------------------------------------------------------
rev 14: ...

------------------------------------------------------------------------
rev 15: ...

------------------------------------------------------------------------
            </screen>

            <para>However, if you wanted to gather 2 non-sequential
              log messages into a file, you might do something like
              this:</para>

            <screen>
$ svn log -r 14 > mylog
$ svn log -r 19 >> mylog
$ svn log -r 27 >> mylog
$ cat mylog
------------------------------------------------------------------------
rev 14: ...

------------------------------------------------------------------------
------------------------------------------------------------------------
rev 19: ...

------------------------------------------------------------------------
------------------------------------------------------------------------
rev 27: ...

------------------------------------------------------------------------
            </screen>

            <para>Note the double dashed lines that you get in your
            output. You can avoid this clutter by using the
            incremental switch:</para>


            <screen>
$ svn log --incremental -r 14 > mylog
$ svn log --incremental -r 19 >> mylog
$ svn log --incremental -r 27 >> mylog
$ cat mylog
------------------------------------------------------------------------
rev 14: ...

------------------------------------------------------------------------
rev 19: ...

------------------------------------------------------------------------
rev 27: ...
              </screen>

            <para>Note that the incremental switch does provides
              similar output control when using the
              <option>--xml</option> switch.</para>
            
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--message</option>
            <replaceable>MESSAGE</replaceable>
            (<option>-m</option>)</term>
          <listitem>
            <para>Indicates that you will specify a commit message
              on the command line, following this switch. For
              example:</para>
            
            <para><command>$ svn checkin -m "Initial
                import."</command></para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-auth-cache</option></term>
          <listitem>
            <para>Do not cache authentication information
              (e.g. username and password) in the Subversion
              administrative directories.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-diff-deleted</option></term>
        <listitem>
            <para>Prevents Subversion from printing differences for
              deleted files.  The default behavior when you remove a
              file is for <command>svn diff</command> to print the
              same differences that you would see if you had left
              the file but removed all the content.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--no-ignore</option></term>
          <listitem>
            <para>Shows files in the status listing that would
              normally be omitted since they match a pattern in the
              svn:ignore property.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--non-interactive</option></term>
          <listitem>
            <para>In the case of an authentication failure, or
            insufficient credentials, do not prompt for credentials
            (e.g. username or password).  This is useful if you're
            running Subversion inside of an automated script and
            it's more appropriate to have Subversion fail then to
            prompt for more information.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--non-recursive</option> (<option>-N</option>)</term>
          <listitem>
            <para>Stops a subcommand from recursing into
              subdirectories.  Note that some subcommands do not
              recurse by default, while others do.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
        <term><option>--password</option><replaceable>PASS</replaceable></term>
          <listitem>
            <para>Indicates that you are providing your password for
              authentication on the command line&mdash;otherwise, if
              it is needed, Subversion will prompt you for
              it.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--quiet</option> (<option>-q</option>)</term>
          <listitem>
            <para>Requests that the client print only essential
              information while performing an operation.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--recursive</option> (<option>-R</option>)</term>
          <listitem>
            <para>Makes a subcommand to recurse into subdirectories.
              Note that some subcommands recurse by default, while
              others don't.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revision</option>
            <replaceable>REV</replaceable>
            (<option>-r</option>)</term>
          <listitem>
            <para>The revision flag indicates that you're going to
              supply a revision (or range of revisions) for a
              particular operation.  You can provide revision
              numbers, revision keywords, or dates (in curly
              braces), as arguments to the revision switch.  If you
              wish to provide a range of revisions, you can provide
              two revisions separated by a colon. For example:</para>

            <screen>
$ svn checkout -r 1729
$ svn checkout -r 1729:HEAD
$ svn checkout -r 1729:1744
$ svn checkout -r {12/04/02}:{2/17/02}
$ svn checkout -r 1729:{2/17/02}
            </screen>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revprop</option></term>
          <listitem>
            <para>Operate on a revision property instead of a
              regular Subversion property.  This switch requires
              that you also pass a revision with the
              <option>--revision</option> (<option>-r</option>)
              switch.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--show-updates</option></term>
          <listitem>
            <para>Causes the client to make a roundtrip to the
              server to retrieve and display information about which
              files in your working copy are out-of-date.  This
              doesn't actually update any of your files&mdash;it
              just shows you which files will be updated if you run
              <command>svn update </command>.
            </para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--strict</option></term>
          <listitem>
            <para>Use strict semantics.  See <xref
                linkend="svn-ch-8-sect-1.15"/> for more details </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--targets</option>
            <replaceable>FILENAME</replaceable></term>
          <listitem>
            <para>You can use the targets switch to tell Subversion to
              get the list of files that you wish to operate on from
              the filename you provide instead of listing all the
              files on the command line.
            </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--username</option><replaceable>NAME</replaceable></term>
          <listitem>
            <para>Indicates that you are providing your username for
              authentication on the command line&mdash;otherwise, if
              it is needed, Subversion will prompt you for
              it.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--verbose</option></term>
          <listitem>
            <para>Requests that the client print out as much
              information as it can while running any subcommand.
              This may result in Subversion printing out additional
              fields, detailed information about every file, or
              additional information regarding its actions.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--version</option></term>
          <listitem>
            <para>Prints the client version info.  This information
              not only includes the version number of the client,
              but als a listing of all repository access modules
              that the client can use to access a Subversion
              repository.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--xml</option></term>
          <listitem>
            <para>Prints <command>svn log</command> output in xml
              format.</para>
          </listitem>
        </varlistentry>
        
      </variablelist>

    </sect2>
    
    <sect2 id="svn-ch-8-sect-1.2">
    <title><command>svn add</command></title>
    
    <para><literal>svn add PATH [PATH [PATH ... ]]</literal></para>
    
    <para>Adds files and directories to your working copy and
      schedules them for addition to the repository.  They will be
      uploaded and added to the repository on your next commit.  If
      you add something and change your mind before committing, you
      can unschedule the file's addition using <command>svn
        revert</command>.</para>

    <variablelist>
      
      <varlistentry>
        <term>Requires</term>
        <listitem>
          <para>Working copy</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>Changes</term>
        <listitem>
          <para>Working copy</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>Needs Network</term>
        <listitem>
          <para>No</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>Switches</term>
        <listitem>
          <itemizedlist>

            <listitem>
              <para><option>--quiet</option></para>
            </listitem>

            <listitem>
              <para><option>--recursive</option> (The default
                behavior is to not recurse).</para>
            </listitem>

            <listitem>
              <para><option>--targets</option></para>
            </listitem>

          </itemizedlist>

        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

    <sect2 id="svn-ch-8-sect-1.3">
      <title><command>svn cat</command></title>

      
      <para><literal>svn cat TARGET [TARGET [TARGET ... ]]</literal></para>
      
      <para>Outputs the contents of the specified files or URLs.
        For listing the contents of directories, see <xref
          linkend="svn-ch-8-sect-1.14"/></para>

      <variablelist>
        
        <varlistentry>
          <term>Requires</term>
          <listitem>
            <para>Working copy (Only if operating on files)</para>

            <para>Repository (Only if operating on URLs)</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Changes</term>
          <listitem>
            <para>Nothing</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Needs Network</term>
          <listitem>
            <para>Only if operating on URLs</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Switches</term>
          <listitem>
            <itemizedlist>

              <listitem>
                <para><option>--password</option>
                  <replaceable>PASS</replaceable></para>
              </listitem>

              <listitem>
                <para><option>--revision</option></para>
              </listitem>

              <listitem>
                <para><option>--username</option>
                  <replaceable>USER</replaceable></para>
              </listitem>

            </itemizedlist>

          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <sect2 id="svn-ch-8-sect-1.4">
      <title><command>svn checkout</command></title>

      <para><literal>svn checkout URL [URL [URL ... ]] [PATH]</literal></para>
      
      <para>Checks out a working copy from a repository. If
        <replaceable>PATH</replaceable> is omitted, the basename of
        the URL will be used as the destination. If multiple URLs
        are given each will be checked out into a sub-directory of
        PATH, with the name of the sub-directory being the basename
        of the URL.</para>

      <variablelist>
        
        <varlistentry>
          <term>Alternate name</term>
          <listitem>
            <para><command>co</command></para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Requires</term>
          <listitem>
            <para>Repository</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Changes</term>
          <listitem>
            <para>Nothing</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Needs Network</term>
          <listitem>
            <para>Yes</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Switches</term>
          <listitem>
            <itemizedlist>

              <listitem>
                <para><option>--no-auth-cache</option></para>
              </listitem>

              <listitem>
                <para><option>--non-interactive</option></para>
              </listitem>

              <listitem>
                <para><option>--non-recursive</option></para>
              </listitem>

              <listitem>
                <para><option>--revision</option></para>
              </listitem>

              <listitem>
                <para><option>--quiet</option></para>
              </listitem>

              <listitem>
                <para><option>--username</option>
                  <replaceable>USER</replaceable></para>
              </listitem>

              <listitem>
                <para><option>--password</option>
                  <replaceable>PASS</replaceable></para>
              </listitem>

            </itemizedlist>

          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <sect2 id="svn-ch-8-sect-1.5">
      <title><command>svn cleanup</command></title>

      <para><literal>svn cleanup [PATH [PATH ... ]]</literal></para>
      
      <para>Recursively clean up the working copy, removing locks
        and resuming unfinished operations.  If you ever get a
        <quote>working copy locked</quote> error, run this command
        to remove stale locks and get your working copy into a
        useable state again.</para>

      <variablelist>
        
        <varlistentry>
          <term>Requires</term>
          <listitem>
            <para>Working copy</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Changes</term>
          <listitem>
            <para>Administrative data in the working copy</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term>Needs Network</term>
          <listitem>
            <para>No</para>
          </listitem>
        </varlistentry>
        
      </variablelist>
      
      
      
    </sect2>

    <sect2 id="svn-ch-8-sect-1.6">
      <title><command>svn commit</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.7">
      <title><command>svn copy</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.8">
      <title><command>svn delete</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.9">
      <title><command>svn diff</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.10">
      <title><command>svn export</command></title>

      <para>The export command is a quick way to create an unversioned
        tree of files from a repository directory&mdash;a tree that
        looks like a typical working copy, but doesn't contain the
        <filename>.svn</filename> directories:</para>
      
      <screen>
        $ svn export file:///usr/local/svn/newrepos/fooproject
        A  fooproject/foo.c
        A  fooproject/bar.c
        A  fooproject/subdir
        A  fooproject/subdir/quux.h
        Checked out revision 3.
      </screen>
      
      <para>The resulting directory will not contain any
        <filename>.svn</filename> administrative areas, and all
        property metadata will be lost.  (Hint: don't use this
        technique for backing up; it's probably better for rolling
        source distributions.)</para>

    </sect2>
    
    <sect2 id="svn-ch-8-sect-1.11">
      <title><command>svn help</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.12">
      <title><command>svn import</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.13">
      <title><command>svn info</command></title>
      
      <para>In general, we try to discourage you from directly
        reading the <filename>.svn/entries</filename> file used to
        track items in a Subversion working copy.  Instead, you can
        get tons of information about an item in your working copy
        by using the <command>svn info</command> command to display
        most of the tracked information:</para>
      
      <screen>
        $ svn info rules.txt
        Path: rules.txt
        Name: rules.txt
        Url: http://svn.red-bean.com/repos/example/trunk/text/rules.txt
        Revision: 8
        Node Kind: file
        Schedule: normal
        Last Changed Author: harry
        Last Changed Rev: 7
        Last Changed Date: 2002-11-15 23:03:54 -0500 (Fri, 15 Nov 2002)
        Text Last Updated: 2002-11-16 08:48:04 -0500 (Sat, 16 Nov 2002)
        Properties Last Updated: 2002-11-16 08:48:03 -0500 (Sat, 16 Nov 2002)
        Checksum: 8sfaU+5dqyOgkhuSdyxGrQ==
      </screen>
      
    </sect2>
    
    <sect2 id="svn-ch-8-sect-1.14">
      <title><command>svn list</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.15">
      <title><command>svn log</command></title>
      <para>###TODO Write this</para>

      <para>###TODO finish this.  Note that by default, svn log will
        provide log messages for a file all the way back to the
        file's creation in Subversion--even if it's been moved or
        copied.  If you use the --strict switch, Subversion will
        print out log messages only for the current path in the
        filesystem and will not provide log messages for the item
        prior to its relocation.
      </para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.16">
      <title><command>svn merge</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.17">
      <title><command>svn mkdir</command></title>
      
      <para>This is another convenience command, and it has two
        uses.</para>
      
      <para>First, it can be used to simultaneously create a new
        working copy directory and schedule it for addition:</para>
      
      <screen>
        $ svn mkdir new-dir
        A     new-dir
      </screen>

      <para>Or, it can be used to instantly create a directory in a
        repository (no working copy needed):</para>

      <screen>
        $ svn mkdir file:///usr/local/svn/newrepos/branches --message "made new dir"
        Committed revision 1123.
      </screen>

      <para>Again, this is a form of immediate commit, so some sort
        of log message is required.</para>
      
    </sect2>

    <sect2 id="svn-ch-8-sect-1.18">
      <title><command>svn move</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.19">
      <title><command>svn propdel</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.20">
      <title><command>svn propedit</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.21">
      <title><command>svn propget</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.22">
      <title><command>svn proplist</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.23">
      <title><command>svn propset</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.24">
      <title><command>svn revert</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.25">
      <title><command>svn resolve</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.26">
      <title><command>svn status</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.27">
      <title><command>svn switch</command></title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-1.28">
      <title><command>svn update</command></title>
      <para>###TODO Write this</para>
    </sect2>
    
  </sect1>
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 2 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-2">
    <title><command>svnadmin</command></title>
    
    <para>
      ###TODO Write this
    </para>

    <sect2 id="svn-ch-8-sect-2.1">
      <title>svn create</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.2">
      <title>svn createtxn</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.3">
      <title>svn dump</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.4">
      <title>svn help</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.5">
      <title>svn load</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.6">
      <title>svn lscr</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.7">
      <title>svn lstxns</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.8">
      <title>svn recover</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.9">
      <title>svn rmtxns</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.10">
      <title>svn setlog</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-2.11">
      <title></title>
      <para>###TODO Write this</para>
    </sect2>

  </sect1>
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 3 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-3">
    <title><command>svnlook</command></title>
    
    <para>### TODO Talk about how svnlook works in general:
      std. command structure, revnums vs. tranny names, what the
      default action is, etc.</para>
    
    <sect2 id="svn-ch-8-sect-3.1">
      <title>svn author</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.2">
      <title>svn changed</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.3">
      <title>svn date</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.4">
      <title>svn diff</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.5">
      <title>svn dirs-changed</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.6">
      <title>svn ids</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.7">
      <title>svn info</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.8">
      <title>svn log</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.9">
      <title>svn tree</title>
      <para>###TODO Write this</para>
    </sect2>

    <sect2 id="svn-ch-8-sect-3.10">
      <title></title>
      <para>###TODO Write this</para>
    </sect2>

  </sect1>
  
  <!-- ================================================================= -->
  <!-- ======================== SECTION 4 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-4">
    <title>Repository Configuration Files</title>
    
    <para>###TODO We should probably break out Apache stuff into its
      own section and talk about ra_local on its own. For ra_dav, go
      through all the relevant directives and what they do.  Once
      ra_svn matures a bit, we can add that.</para>

  </sect1>
  <!-- ================================================================= -->
  <!-- ======================== SECTION 5 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-5">
    <title>Repository commit hooks</title>
    
    <para>
      ###TODO pre-commit, post-commit, start-co
    </para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 6 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-6">
    <title>Client configuration (Inside the
      <filename>.subversion</filename> directory)</title>
    
    <para>###TODO Write this</para>
    
  </sect1>
  <!-- ================================================================= -->
  <!-- ======================== SECTION 7 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-8-sect-7">
    <title>The Working Copy Administrative Area (Inside the
      <filename>.svn</filename> directories)</title>

    <!-- ###TODO: Do we want to include this? -Fitz -->
    <para>
      ###TODO If we decide to go with this, add a short summary, a
      big warning to not touch anything, and then a quick blurb for
      each of the following: README, auth/, dir-prop-base,
      dir-props, dir-wcprops, empty-file, entries, format,
      prop-base/, props/, text-base/, tmp/, and wcprops/</para>

  </sect1>
  
</chapter>


