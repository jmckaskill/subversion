<chapter id="svn-ch-1">

  <title>Introduction</title>

  <simplesect>
    <para>Version control is the art of managing changes to
      information.  It has long been a critical tool to programmers,
      who typically spend their time making small changes to software
      and then undoing those changes the next day.  Imagine a team of
      these programmers working concurrently, and you can see why a
      good version control system is needed to manage the potential
      chaos.</para>
  </simplesect>


  <!-- ================================================================= -->
  <!-- ======================== SECTION 1 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-1">

    <title>What is Subversion?</title>
      
    <para>Subversion is a free/open-source version control system.
      That is, Subversion manages files and directories over time.
      The tree of files are placed into a central
      <firstterm>repository</firstterm>.  The repository is much like
      an ordinary file server, except that it remembers every change
      ever made to your files and directories.  This allows you to
      recover older versions of your tree, or examine the history of
      how your data changed.  In this regard, many people think of a
      version control system as a sort of ``time machine.''</para>
    
    <!-- ### something about subversion facilitating communication
    between developers?? -->

    <para>Some version control systems are also software configuration
      management (SCM) systems.  These systems are specifically
      tailored to manage trees of source code, and have many features
      that are specific to software development (such as natively
      understanding programming languages).  Subversion, however, is
      not one of these systems; it is a general system that can be
      used to manage <emphasis>any</emphasis> sort of collection of
      files, including source code.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 2 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-2">

    <title>Subversion's History</title>

    <para>In 1995, Karl Fogel and Jim Blandy founded Cyclic Software,
      a company for commercially supporting and improving the
      Concurrent Versions Sysetm (CVS).  Cyclic made the first public
      release of a network-enabled CVS (contributed by Cygnus
      software.)  In 1999, Karl Fogel published a book about CVS and
      the open-source development model it enables.  Karl and Jim had
      long talked about writing a replacement for CVS; Jim had even
      drafted a new, theoretical repository design, and come up with a
      good name.  Finally, in February of 2000, Brian Behlendorf of
      CollabNet (http://www.collab.net) offered Karl a full-time job
      to write a CVS replacement.  Karl gathered a team together and
      work began in May.  Because Subversion was developed openly
      under a free license, it quickly attracted a community of
      developers.</para>

    <para>The original design team settled on a few simple goals.
      First, it was decided that Subversion should be a functional
      replacement for CVS.  That is, it should do everything that CVS
      does, preserving the same development model while fixing the
      most obvious flaws.  Secondly, with existing CVS users as the
      first target audience, Subversion should be written such that
      any CVS user should be able to start using it with little
      effort.</para>

    <para>While CollabNet can be credited with initiating and funding
      a very large chunk of the work (it pays the salaries of a few
      full-time Subversion developers), the project is still a typical
      open-source project, governed by the usual meritocratic rules.
      CollabNet owns the copyright on the code, but that copyright is
      an Apache/BSD-style license which is fully compliant with the
      Debian Free Software Guidelines. In other words, anyone is free
      to download, modify, and redistribute Subversion as he pleases;
      no permission from CollabNet or anyone else is required.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 3 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-3">

    <title>Subversion's Features</title>

    <para>What sort of things does Subversion do better than CVS?
      Here's a short list to whet your appetite:</para>

    <variablelist>

      <varlistentry>
        <term>Advanced network layer</term>
        <listitem>
          <para>The Subversion network server is Apache, and client
            and server speak WebDAV protocol to one another.  ###TODO
            Xref to Designe
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Faster network access</term>
        <listitem>
          <para>A binary diffing algorithm is used to store
            and transmit deltas in both directions, regardless of whether a file
            is of text or binary type.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Meta-data</term>
        <listitem>
          <para>Each file or directory has an invisible hash table
            attached.  You can invent and store any arbitrary key/value pairs you
            wish: owner, perms, icons, app-creator, mime-type, personal notes,
            etc.  This is a general-purpose feature for users.  Properties are
            versioned over time, just like file contents.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>Hackability</term>
        <listitem>
          <para>Subversion has no historical baggage; it is primarily
            a collection of shared C libraries with well-defined APIs.  This makes
            Subversion extremely maintainable and usable by other applications and
            languages.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Directory versioning</term>
        <listitem>
          <para>The Subversion repository doesn't use RCS files like
            CVS; instead, it implements a <quote>virtual</quote>
            versioned filesystem that tracks changes to directory/file
            heirarchies over time.  Files <emphasis>and</emphasis>
            directories are versioned.  At last, there are real
            client-side <command>move</command> and
            <command>copy</command> commands.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Atomic commits</term>
        <listitem>
          <para>A commit either goes into the repository
            completely, or not all.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect1>


  <!-- ================================================================= -->
  <!-- ======================== SECTION 4 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-4">

    <title>Subversion's components</title>

    <para>### List the binaries in a table, and what they do.</para>

  </sect1>


  <!-- ================================================================= -->
  <!-- ======================== SECTION 5 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-5">

    <title>How to get Subversion</title>

    <para>### TODO Write this.  List URLs, RPMs, etc.</para>

  </sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
