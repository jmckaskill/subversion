<chapter id="svn-ch-1">

  <title>Introduksjon</title>

  <simplesect>
    <para>Versjonskontroll er kunsten &#229; behandle forandringer i 
      informasjon.
      Det har lenge v&#230;rt et kritisk verkt&#248;y for programmerere, som 
      typisk nok bruker tiden sin p&#229; &#229; gj&#248;re sm&#229; forandringer til 
      programvare og deretter forandrer det tilbake dagen etterp&#229;.
      Men nyttigheten av versjonskontroll rekker langt forbi grensene 
      for programutviklingsverdenen.
      Alle steder du finner folk som bruker datamaskiner til &#229; behandle 
      informasjon som forandrer seg ofte, der er det plass for 
      versjonskontroll.
      Og det er her Subversion kommer inn i bildet.</para>

    <para>Dette kapitlet inneholder en h&#248;ytsvevende introduksjon til 
      Subversion &#8212; hva det er, hva det gj&#248;r og hvordan f&#229; tak i 
      det.</para>

  </simplesect>


  <!-- ================================================================= -->
  <!-- ======================== SECTION 1 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-1">

    <title>Hva er Subversion?</title>
      
    <para>Subversion er et fritt/opensource versjonskontrollsystem.
      Det betyr: Subversion behandler filer og kataloger over tid.
      Et tre av filer er plassert inn i et sentralt 
      <firstterm>depot</firstterm>.
      Depotet ligner mye p&#229; en vanlig filtjener, med det unntaket at den 
      husker hver eneste forandring noensinne gjort p&#229; filene og 
      katalogene.
      Dette tillater deg &#229; hente fram eldre versjoner av dataene dine, 
      eller studere historien for hvordan dataene dine har forandret 
      seg.
      I anledning dette tenker mange p&#229; versjonskontroll som en slags 
      <quote>tidsmaskin</quote>.</para>
    
    <para>Subversion kan aksessere depotet sitt via datanettverk, som 
      tillater det &#229; bli brukt av personer p&#229; forskjellige maskiner.
      P&#229; et visst niv&#229; gir muligheten for forskjellige personer til &#229; 
      modifisere og behandle den samme datamengden seg utslag i 
      samarbeid.
      Fremgangen kan g&#229; fortere uten en trang flaskehals all 
      forandringene m&#229; g&#229; gjennom.
      Og fordi arbeidet er versjonert, trenger du ikke frykte at 
      kvaliteten er noe du m&#229; gi avkall p&#229; n&#229;r du mister denne 
      flaskehalsen &#8212; hvis en feil forandring er gjort med dataene, bare 
      omgj&#248;r denne forandringen.</para>

    <para>Noen versjonskontrollsystemer er ogs&#229; <!-- &#164; 
      --><foreignphrase>software configuration 
      management</foreignphrase>-systemer (SCM).
      Disse systemene er spesielt beregnet p&#229; &#229; vedlikeholde tr&#230;r av 
      kildekode, og har mange funksjoner som er spesifikk til 
      programutvikling &#8212; som en viss forst&#229;else av programmeringsspr&#229;k, 
      eller de tilbyr verkt&#248;y for &#229; bygge programvare.
      Subversion, derimot, er ikke et av disse systemene.
      Det er et generelt system som kan bli brukt til &#229; vedlikeholde en 
      <emphasis>hvilken som helst</emphasis> samling av filer.
      For ditt vedkommende kan det v&#230;re kildekode &#8212; for andre, alt fra 
      huskelister til butikken til redigeringsfiler for digital video og 
      annet.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 2 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-2">

    <title>Subversions historie</title>

    <para>Tidlig i &#229;r 2000 startet CollabNet, Inc. (<systemitem
      class="url">http://www.collab.net</systemitem>) letingen etter 
      utviklere for &#229; skrive en erstatning for CVS.
      CollabNet tilbyr programvare for &#229; muliggj&#248;re samarbeid &#8212; 
      SourceCast &#8212; der en komponent er versjonskontroll.
      Selv om SourceCast brukte CVS som sitt f&#248;rste 
      versjonskontrollsystem, var begrensningene i CVS helt fra 
      begynnelsen veldig tydelige, og CollabNet visste at noe bedre 
      m&#229;tte finnes p&#229; et eller annet tidspunkt.
      Uheldigvis hadde CVS blitt <foreignphrase>de 
      facto</foreignphrase>-standarden i opensource-verdenen fordi det 
      <emphasis>ikke fantes</emphasis> noe bedre, ihvertfall ikke under 
      en fri lisens.
      S&#229; CollabNet gikk inn for &#229; skrive et nytt versjonskontrollsystem 
      fra scratch, basert p&#229; de grunnleggende id&#233;ene fra CVS, men uten 
      feilene og manglende funksjoner.</para>

    <para>I februar 2000 kontaktet de Karl Fogel, forfatteren av 
      <citetitle>Open Source Development with CVS</citetitle> (Coriolis, 
      1999), og spurte om han ville arbeide p&#229; dette nye prosjektet.
      Tilfeldigvis diskuterte Karl p&#229; dette tidspunktet et design for et 
      nytt versjonskontrollsystem med sin venn Jim Blandy.
      I 1995 startet de to Cyclic Software, et firma som tilb&#248;d 
      kontrakter for CVS-st&#248;tte, og selv om de senere solgte 
      forretningen, brukte de fortsatt CVS hver dag p&#229; jobben.
      Frustrasjonen deres over CVS hadde f&#229;tt Jim til &#229; tenke n&#248;ye over 
      bedre veier til &#229; behandle versjonerte data, og han hadde allerede 
      kommet opp med ikke bare navnet <quote>Subversion</quote>, men 
      ogs&#229; med det grunnleggende designet av depotet for Subversion.
      Da foresp&#248;rselen kom fra CollabNet, gikk Karl &#248;yeblikket med p&#229; &#229; 
      arbeide med prosjektet, og Jim fikk sin arbeidsgiver, RedHat 
      Software, til &#229; hovedsaklig donere ham til prosjektet for en 
      udefinert tidsperiode.
      CollabNet ansatte Karl og Ben Collins-Sussman, og detaljert 
      designarbeid startet i mai.
      Med hjelp av noen velplasserte n&#229;lestikk fra Brian Behlendorf, 
      Jason Robbins fra CollabNet og Greg Stein (p&#229; den tiden en 
      uavhengig utvikler aktiv innen spesifikasjonsprosessen for 
      WebDAV/DeltaV), fikk Subversion raskt trukket til seg en samling 
      aktive utviklere.
      Det viste seg at mange folk hadde hatt de samme frustrerende 
      opplevelsene med CVS, og &#248;nsket sjansen til &#229; endelig f&#229; gjort noe 
      med dette velkommen.</para>

    <para>Den originale designgruppen satte seg enkle m&#229;l.
      De ville ikke bryte nytt land innen versjonskontrollteknikken, de 
      ville bare forbedre CVS.
      De bestemte seg for at Subversion skulle ha de samme funksjonene 
      som CVS og beholde den samme utviklingsmodellen, men uten de mest 
      &#229;penbare feilene i CVS.
      Og selv om det n&#248;dvendigvis ikke skulle v&#230;re en fullstendig 
      erstatning for CVS, skulle det v&#230;re likt nok til at enhver 
      CVS-bruker kunne gjennomf&#248;re overgangen med sm&#229; 
      anstrengelser.</para>

    <para>Etter fjorten m&#229;neder med programmering ble Subversion 
      <quote>selvlagrende</quote> den 31. august 2001.
      Det bet&#248;d at Subversionutviklerne avsluttet bruken av CVS til &#229; 
      vedlikeholde Subversions kildekode, og gikk over til &#229; bruke 
      Subversion istedenfor.</para>

    <para>Selv om CollabNet startet prosjektet, og fortsatt finansierer 
      en stor del av arbeidet (de betaler l&#248;nningene for noen f&#229; 
      fulltidsansatte Subversionutviklere), drives Subversion som de 
      fleste opensource-prosjekter, styrt av et l&#248;st sammensatt og 
      gjennomsiktig regelverk som oppmuntrer til elitestyre.
      CollabNets copyrightlisens er fullstendig i samsvar med Debians 
      retningslinjer for fri software &#8212; <foreignphrase>Debian Free 
      Software Guidelines</foreignphrase>.
      Med andre ord, alle kan hente, modifisere og redistribuere 
      Subversion som de selv &#248;nsker; ingen tillatelse fra CollabNet 
      eller andre er n&#248;dvendig.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 3 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-3">

    <title>Subversions fordeler</title>

    <para>N&#229;r vi diskuterer funksjonalitetene som Subversion bringer til 
      <!-- &#164; -->versjonskontrollbordet, hjelper det ofte &#229; snakke om dem 
      i vendinger som beskriver hvordan de er forbedringer i forhold til 
      m&#229;ten CVS er konstruert.
      Hvis du ikke er vant med CVS, er det ikke sikkert du forst&#229;r alle 
      disse funksjonene.
      Og hvis du ikke er kjent med versjonskontroll i det hele tatt, kan 
      nok blikket sl&#248;ves s&#229;fremt du ikke har lest <xref
      linkend="svn-ch-2"/>, hvor vi foretar en forsiktig introduksjon 
      til versjonskontroll generelt.</para>

    <para>Subversion tilbyr:</para>

    <variablelist>
      <varlistentry>
        <term>Versjonering av kataloger</term>
        <listitem>
          <para>CVS holder bare rede p&#229; historien til individuelle 
            filer, men Subversion implementerer et 
            <quote>virtuelt</quote> versjonert filsystem som f&#248;lger 
            forandringer til hele katalogtr&#230;r over tid.
            Filer <emphasis>og</emphasis> kataloger er 
            versjonert.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Sann versjonshistorie</term>
        <listitem>
        <para>Siden CVS er begrenset til versjonering av filer, er ikke 
          operasjoner som kopiering og navneskifte &#8212; som kan hende med 
          filer, men som egentlig er forandringer i innholdet av 
          katalogen de ligger i &#8212; st&#248;ttet i CVS.
          I tillegg kan du ikke i CVS erstatte en versjonert fil med en 
          ny ting med det samme navnet uten at det nye elementet overtar 
          historien til den gamle &#8212; kanskje helt urelaterte &#8212; filen.
          Med Subversion kan du legge til, slette, kopiere og skifte 
          navn p&#229; b&#229;de filer og kataloger.
          Og hver fil som er nylig lagt til begynner med en frisk, ren 
          historie helt for seg selv.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Atomisk innlegging</term>
        <listitem>
          <para>En samling av forandringer g&#229;r enten fullstendig inn i 
            depotet, eller ikke i det hele tatt.
            Dette tillater utviklerne &#229; konstruere og legge inn 
            forandringer som logiske porsjoner, og forhindrer problemer 
            som kan oppst&#229; n&#229;r bare en del av forandringene ble lagt inn 
            i depotet.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Versjonerte metadata</term>
        <listitem>
          <para>Hver fil og katalog har et sett med egenskaper &#8212; 
            egenskapsnavn og deres verdier &#8212; assosiert med seg.
            Du kan opprette og lagre ethvert vilk&#229;rlig 
            egenskapsnavn/verdi-par som du &#248;nsker.
            Egenskaper er versjonert over tid, akkurat som 
            filinnhold.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Valg av nettverkslag</term>
        <listitem>
          <para>Subversion har et l&#248;st definert begrep om depottilgang, 
            noe som gj&#248;r det enkelt for brukere &#229; implementere nye 
            nettverksmekanismer.
            Subversion kan plugges inn i Apache HTTP-serveren som en 
            tilleggsmodul.
            Dette gir Subversion en stor fordel innen stabilitet og 
            kommunikasjon med brukere og prosesser, og &#248;yeblikkelig 
            tilgang til eksisterende funksjoner som denne serveren 
            tilbyr &#8212; autentisering, autorisasjon, <!-- &#164; --><quote>wire 
            compression</quote> og s&#229; videre.
            En lettere egenst&#229;ende Subversiontjener-prosess er ogs&#229; 
            tilgjengelig.
            Denne tjeneren snakker en tilpasset protokoll som lett kan 
            bli kj&#248;rt gjennom en SSH-tunnel.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Konsekvent databehandling</term>
        <listitem>
          <para>Subversion uttrykker filforskjeller ved en bin&#230;r 
            forskjellsalgoritme som fungerer likt b&#229;de p&#229; tekst (lesbar 
            for det menneskelige &#248;ye) og bin&#230;re (uleselige for 
            mennesker) filer.
            Begge filtypene pakkes p&#229; samme m&#229;te i depotet, og 
            forskjeller blir overf&#248;rt i begge retninger over 
            nettverket.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Effektiv forgrening og merking</term>
        <listitem>
          <para>Belastningen ved &#229; forgrene eller merke trenger ikke &#229; 
            v&#230;re proporsjonal med prosjektst&#248;rrelsen.
            Subversion lager forgreninger og merker ved &#229; rett og slett 
            kopiere prosjektet, ved hjelp av en mekanisme lik en hard 
            lenke.
            Dermed tar disse operasjonene bare en liten, konstant 
            tid.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term><quote>Hackability</quote></term><!-- &#164; -->
        <listitem>
          <para>Subversion har ingen historisk bagasje; den er 
            implementert som en samling av delte C-biblioteker med 
            veldefinerte programmeringsgrensesnitt.
            Dette gj&#248;r Subversion ekstremt lett &#229; vedlikeholde og lett &#229; 
            bruke av andre applikasjoner og spr&#229;k.</para>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 4 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-4">

    <title>Subversions arkitektur</title>

    <para><xref linkend="svn-ch-1-dia-1"/> illustrerer hva man kan kalle 
      en <quote>mileh&#248;y</quote> oversikt over Subversions design.</para>
    
    <figure id="svn-ch-1-dia-1">
      <title>Subversions arkitektur</title>
      <graphic fileref="images/ch01dia1.png"/>
    </figure>

    <para>P&#229; den ene kanten er et Subversiondepot som inneholder alle 
      dine versjonerte data.
      I den andre enden er Subversionklienten din, som styrer med lokale 
      avspeilinger av deler av disse versjonerte dataene (kalt 
      <quote>arbeidskopier</quote>).
      Mellom disse yttergrensene er det flere ruter gjennom diverse 
      tilgangslag &#8212; <foreignphrase>Repository Access 
      (RA)</foreignphrase>.
      Noen av disse rutene g&#229;r over datanettverk og gjennom datatjenere 
      som deretter aksesserer depotet.
      Andre dropper hele nettverket og bruker direkte tilgang til 
      depotet.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 5 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-5">

    <title>Installering av Subversion</title>

    <para>Subversion er bygget p&#229; et portabilitetslag kalt APR 
      (biblioteket <foreignphrase>Apache Portable 
      Runtime</foreignphrase>).
      Dette betyr at Subversion skal kunne virke p&#229; alle 
      operativsystemer som Apache httpd-serveren kj&#248;rer p&#229;:
      Windows, Linux, alle varianter av BSD, Mac OS X, Netware og 
      andre.</para>

    <para>Den letteste m&#229;ten &#229; f&#229; tak i Subversion er &#229; hente en bin&#230;r 
      pakke bygget for ditt operativsystem.
      Subversions hjemmeside (<systemitem
      class="url">http://subversion.tigris.org</systemitem>) har ofte 
      disse pakkene tilgjengelig for nedlasting, lagt ut av frivillige.
      Denne plassen inneholder vanligvis grafiske installasjonspakker 
      for brukere av operativsystemer fra Microsoft.
      Hvis du kj&#248;rer et Unix-lignende operativsystem, kan du bruke 
      systemets innebyggede distribusjonssystem (RPM-filer, DEB-filer, 
      <quote>ports</quote>-treet, osv.) for &#229; hente Subversion.</para>

    <para>Du kan ogs&#229; bygge Subversion direkte fra kildekode.
      Siste versjon av den kan hentes fra Subversions hjemmeside.
      Etter at du har pakket den ut, f&#248;lg instruksjonene i filen 
      <filename>INSTALL</filename> for &#229; kompilere den.
      Merk at en offentliggjort kildekodepakke inneholder alt du trenger 
      for &#229; bygge en kommandolinjeklient i stand til &#229; kommunisere med 
      et fjerntliggende depot (i s&#230;rdeleshet, bibliotekene apr, apr-util 
      og neon).
      Men valgfrie deler av Subversion har mange andre avhengigheter, 
      som Berkeley DB og muligens Apache httpd.
      Hvis du vil foreta en komplett kompilering, v&#230;r sikker p&#229; at du 
      har alle pakkene dokumentert i <filename>INSTALL</filename>-filen.
      Hvis du planlegger &#229; arbeide p&#229; selve Subversion, kan du bruke 
      svn-klienten din for &#229; hente den siste rykende ferske kildekoden.
      Dette er dokumentert i <xref linkend="svn-ch-8-sect-6.2"/>.</para>

  </sect1>

  <!-- ================================================================= -->
  <!-- ======================== SECTION 6 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-6">

    <title>Subversions komponenter</title>
    
    <para>Subversion, n&#229;r den er installert, best&#229;r av flere deler.
      Det f&#248;lgende er en rask oversikt over hva du f&#229;r.
      Ikke bli skremt hvis den snaue beskrivelsen etterlater deg med &#229; 
      kl&#248; deg i hodet &#8212; det er <emphasis>mange</emphasis> flere sider i 
      denne boken beregnet p&#229; &#229; fjerne denne forvirringen.</para>

    <variablelist>
      <varlistentry>
        <term>svn</term>
        <listitem>
          <para>Kommandolinjeklienten.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>svnversion</term>
        <listitem>
          <para>Et program for &#229; rapportere tilstanden (i betydningen av 
            revisjonener for de elementene som finnes) for en 
            arbeidskopi.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>svnlook</term>
        <listitem>
          <para>Et verkt&#248;y for &#229; inspisere et Subversiondepot.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>svnadmin</term>
        <listitem>
          <para>Et verkt&#248;y for &#229; lage, tilpasse eller reparere et 
            Subversiondepot.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>svndumpfilter</term>
        <listitem>
          <para>Et program for &#229; filtrere str&#248;mmer i dumpfil-format for 
            et Subversiondepot.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>mod_dav_svn</term>
        <listitem>
          <para>En programtilleggsmodul for Apache HTTP-serveren, brukt 
            til &#229; gj&#248;re depotet ditt tilgjengelig for andre over et 
            nettverk.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>svnserve</term>
        <listitem>
          <para>Et tilpasset selvstendig tjenerprogram, kj&#248;rbar som en 
            daemon-prosess eller startbar av SSH;
            en annen m&#229;te &#229; gj&#248;re depotet ditt tilgjengelig for andre 
            over et nettverk.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Forutsatt at du har Subversion korrekt installert, er du klar 
      til &#229; starte.
      De neste to kapitlene vil vise deg bruken av 
      <command>svn</command>, Subversions klient for 
      kommandolinjebruk.</para>

  </sect1>


  <!-- ================================================================= -->
  <!-- ======================== SECTION 7 ============================== -->
  <!-- ================================================================= -->
  <sect1 id="svn-ch-1-sect-7">

    <title>En rask start</title>
    
    <para>Noen personer har problemer med &#229; absorbere en ny teknologi 
      ved &#229; lese dokumentasjon lagt ut etter et &#171;ovenfra og 
      ned&#187;-prinsipp som i denne boken.
      Denne seksjonen er en veldig kort introduksjon til Subversion., og 
      er ment &#229; gi personer som l&#230;rer &#171;nedenfra og opp&#187; en sjanse.
      Hvis du er en av dem som liker &#229; l&#230;re gjennom eksperimentering, 
      vil den f&#248;lgende demonstrasjonen f&#229; deg opp &#229; kj&#248;re.
      Under gjennomgangen vil vi gi deg lenker til de relevante 
      kapitlene i denne boken.</para>

    <para>Hvis du er ny innen hele konseptet med versjonskontroll eller 
      til <quote>kopier-rediger-flett</quote>-modellen brukt av b&#229;de CVS 
      og Subversion, b&#248;r du lese <xref linkend="svn-ch-2"/> f&#248;r du g&#229;r 
      videre.</para>

    <note>
      <para>Det f&#248;lgende eksemplet forutsetter at du har 
        <command>svn</command>, kommandolinjeklienten, og 
        <command>svnadmin</command>, det administrative verkt&#248;yet, klar 
        til kj&#248;ring.
        Det forutsetter ogs&#229; at <command>svn</command>-klienten er 
        kompilert med st&#248;tte for Berkeley DB.
        For &#229; sjekke dette, kj&#248;r <command>svn --version</command> og se 
        at <literal>ra_local</literal>-modulen er tilgjengelig.
        Uten denne modulen, kan ikke klienten f&#229; adgang til URLer av 
        typen <literal>file://</literal>.</para>
    </note>

    <para>Subversion lagrer alle versjonerte data i et sentralt depot. 
      For &#229; begynne, lag et nytt depot:</para>

    <screen>
$ svnadmin create /sti/til/depot
$ ls /sti/til/depot
conf/  dav/  db/  format  hooks/  locks/  README.txt
</screen>

    <para>Denne kommandoen lager en ny katalog 
      <filename>/sti/til/depot</filename> som inneholder et 
      Subversiondepot.
      V&#230;r sikker p&#229; at denne katalogen er p&#229; en lokal disk, 
      <emphasis>ikke</emphasis> en disk p&#229; nettverket.
      Denne nye katalogen inneholder inneholder hovedsaklig en samling 
      med Berkeley DB databasefiler.
      Du vil ikke se dine versjonerte filer hvis du tar en kikk 
      innenfor.
      For mer informasjon om opprettelse og vedlikehold av depot, se 
      <xref
      linkend="svn-ch-5"/>.</para>

    <para>Deretter, lag et tre av filer og kataloger som skal importeres 
      inn i depotet.
      For grunner som vil bli forklart senere (se <xref 
      linkend="svn-ch-4"/>), b&#248;r strukturen inneholde tre toppkataloger 
      kalt <filename>branches</filename>, <filename>tags</filename> og 
      <filename>trunk</filename>:</para>

    <screen>
/tmp/project/branches/
/tmp/project/tags/
/tmp/project/trunk/
               foo.c
               bar.c
               Makefile
               &#8230;
</screen>

    <para>N&#229;r du har klart et tre med data, importer dataene inn i 
      depotet med kommandoen  <command>svn import</command> (se <xref 
      linkend="svn-ch-3-sect-7.3"/>):</para>

    <screen>
$ svn import /tmp/project file:///sti/til/depot -m "Grunnleggende import"
Adding         /tmp/project/branches
Adding         /tmp/project/tags
Adding         /tmp/project/trunk
Adding         /tmp/project/trunk/foo.c
Adding         /tmp/project/trunk/bar.c
Adding         /tmp/project/trunk/Makefile
&#8230;
Committed revision 1.
$ 
</screen>

    <para>N&#229; inneholder depotet dette treet med data.
      Legg merke til at den originale 
      <filename>/tmp/project</filename>-katalogen er uforandret, 
      Subversion kjenner ikke til den.
      (Faktisk kan du til og med slette denne katalogen hvis du &#248;nsker 
      det.)
      For &#229; starte med &#229; manipulere dataene i depotet, m&#229; du lage en ny 
      <quote>arbeidskopi</quote> av dataene, et slags personlig 
      arbeidsomr&#229;de.
      Be Subversion om &#229; <quote>hente ut</quote> en arbeidskopi fra 
      katalogen <filename>trunk</filename> i depotet:</para>

    <screen>
$ svn checkout file:///sti/til/depot/trunk project
A  project/foo.c
A  project/bar.c
A  project/Makefile
&#8230;
Checked out revision 1.
</screen>

    <para>N&#229; har du en personlig kopi av en del av depotet i en ny 
      katalog kalt <filename>project</filename>.
      Du kan redigere filene i arbeidskopien og deretter legge inn disse 
      forandringene inn i depotet.</para>

    <itemizedlist>
      <listitem><para>G&#229; inn i arbeidskopien og rediger innholdet av en 
      fil.</para></listitem>
      <listitem><para>Kj&#248;r kommandoen <command>svn diff</command> for &#229; 
      se en <foreignphrase>unified diff</foreignphrase> (forskjellsfil) 
      over forandringene dine.</para></listitem>
      <listitem><para>Kj&#248;r <command>svn commit</command> for &#229; legge inn 
      den nye versjonen av filen din til depotet.</para></listitem>
      <listitem><para>Kj&#248;r <command>svn update</command> for &#229; gj&#248;re 
      arbeidskopien din <quote>up-to-date</quote> med 
      depotet.</para></listitem>
    </itemizedlist>

    <para>For en full gjennomgang av tingene som du kan gj&#248;re med 
      arbeidskopien din, les <xref linkend="svn-ch-3"/>.</para>

    <para>Ved dette punktet har du valget om &#229; gj&#248;re depotet ditt 
      tilgjengelig over et nettverk.
      Se <xref linkend="svn-ch-6"/> for &#229; l&#230;re om de forskjellige 
      tjenerprosessene tilgjengelig og hvordan du setter dem opp.</para>

  </sect1>


</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
vim: set textwidth=72 nowrap formatoptions+=w2 expandtab shiftwidth=2 tabstop=2 softtabstop=2 fileencoding=utf8 :
-->
