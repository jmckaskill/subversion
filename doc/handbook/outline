
Goal: I want a single unified user manual, much in the spirit of the
excellent FreeBSD Handbook, probably called the "Subversion Handbook".

Like the FreeBSD Handbook, it should be compact and to-the-point, and
cover 95% of all topics that users run into.  It should explain
expected behaviors, and give short sample 'recipes'.  

Most importantly, it shouldn't be so detailed as to preclude a *real*
book, like the one Karl and Fitz are writing for O'Reilly.  (Someday 
that book will be included in our source tree too.)

-------------------------------------------------------
Possible Outline of the Subversion Handbook


Preface

I. Getting Started

  1. Intro  [from the LJ article]
       a. 'revision control' system vs. 'SCM' system
       b. why svn exists
       c. overview of features

  2. Design overview
       [very quick tour of library 'layers' -- from LJ article]

  3. Installation
       [various ways of installing binary packages for different platforms]
       [pointer to appendix 3]

  4. Subversion Basics
      [put pointer to appendix 1, so CVS users can read the 'diff']
       a. The non-locking model
             [Jim's great conversational explanation]   
       b. Quick walk-through
             [explanation of ra_local vs. ra_dav]
             [repos creation/tour/walk-through from our README doc]


II. Client Cookbook

  1. checkout
  2. basic work cycle  
       1. making changes:  editing, rm, add, revert, cp, mv
       2. examining the wc:  status, info, local diff
       3. sending changes:  commit
       3. receiving changes:  update, resolve (conflicts)
  3. getting history from the repository:  network diff, log
  4. branches and tags:  cp, mv, switch, merge
  5. properties
      a. general use:  pl, pg, ps, pe, pd
      b. "magic" properties:  eol-style, keywords, executable
  6. modules:  svn:externals
  7. revision keywords:  HEAD, PREV, BASE, etc.
  8. other commands:  import, export, mkdir, cleanup
  9. the .subversion/ area

III.  Repository Administration

  1. Creating a repository
  2. Examining a repository (svnlook, shell)
  3. Repository hooks
  4. Repository maintenance
       a. Berkeley DB maintenance:  db_recover, ptrs to their site
       b. [someday: SQL maintenance?]
       c. undeltify, setlog, ls/rmtxns
  6. Networking the repository [httpd config]
  7. Repository migration: dump, load
  8. WebDAV interoperability

IV. Appendices

  1. SVN for CVS users
  2. Compiling and Installing
  3. Contributing to the project
  4. Quickref sheet [can this be ported from latex?]
  5. Links:  pointers to FAQ, WebDAV docs
  6. License
