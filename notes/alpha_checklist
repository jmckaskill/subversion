   -*- text -*-

Issues to discuss/prioritize POST Milestone 2
=============================================


A. How ACLs should work.  Do they live as filesystem props?  How
   should authorization and authentication work in general?

   We need a security architecture that:
  
      * will take advantage of Apache

      * fits well with the Sourcecast 2.0 framework

      * will still be present even with nothing but ra_local

      * is doable in svn 1.0, providing security as good as cvs.

      * has a consistent user interface for *all* present and future
        authentication mechanisms.

B. Who is going to write the cvs2svn converter (using cvs2cl's code)?
   Who is going to write a lossy svn2cvs converter?

C. Who is going to write a gui design/whitepaper?  Who will write
   them?

D. svn import?  annotate?  log?  other commands that are still missing?

E. How will we present branches and tags to the user?  Show them as
   subdirs, or hide them under a cvs-compatible command interface?

F. Still need a perl/python external test framework.

G. How does svn_wc_cleanup() get used?  exposed as a user command?

H. External diff program invocation via client-side plugins.

I. Hook system. need pre-post commit hooks.  Other hooks?  How will we
   implement?  How will we make them available to users?

J. svnadmin app.  What does it need to do?  who will write?

K. Chris wants to talk about distributed repositories: read-only
   repositories that have data "pushed" at them via hierarchy, while
   only the Master repo can accept commits.

L. Copy nodes (or props).  we need better history tracking when making
   cheap copies in the fs, else we lose copy history information.

M. All client commands need to accept multiple targets.

N. svn mv, svn cp   (trivial to write).

O. 90% solution to the "repeated merge" problem?  genetic merging?
   how much changeset metadata should we be tracking?

P. Optimizations that *should* be in effect, but aren't yet:

    1. need deltified storage of node-revisions in the filesystem
       (representation skels)

    2. svn_fs_dir_delta should use the "copyfrom" args if possible; it
       should know which pieces of an update are already possessed by
       the working copy.

    3. file contents are being held entirely in RAM -- on *both*
       client and server sides -- even though we already have a whole
       streamy system in place to make this unnecessary!

Q. Need more descriptive error messages all around.  Perhaps a table
   that maps errnos to strings.  (We'll need this anyway once we
   internationalize.) 

R. Speaking of which:  i18n plans?  Mulitlingual plans?
