Only places in libsvn_wc where the old props files are accessed:

svn_wc__prop_path()
init_adm()



/* Set the properties of LOCAL_ABSPATH in ACTUAL to PROPS.
 * ### Doing what to WORKING and BASE? */
svn_wc__db_op_set_props();

/* Set the properties of LOCAL_ABSPATH in WORKING to PROPS.
 * ### Doing what to BASE? */
svn_wc__db_temp_op_set_pristine_props(on_working = TRUE);

/* Set the properties of LOCAL_ABSPATH in BASE to PROPS.  */
svn_wc__db_temp_op_set_pristine_props(on_working = FALSE);


/* Set *PROPS to the properties of LOCAL_ABSPATH in ACTUAL.  */
svn_wc__db_read_props();

/* Set *PROPS to the properties of LOCAL_ABSPATH in WORKING.  */
svn_wc__db_read_pristine_props();

/* Set *PROPS to the properties of LOCAL_ABSPATH in BASE.  */
svn_wc__db_base_get_props();


/* Set *PROPVAL to the value of the property named PROPNAME of the node
 * LOCAL_ABSPATH in ACTUAL (else WORKING else BASE).  */
svn_wc__db_read_prop();

/* Set *PROPVAL to the value of the property named PROPNAME of the node
 * LOCAL_ABSPATH in BASE.  */
svn_wc__db_base_get_prop();


General doc string elements:

/*
 * PROPS maps "const char *" property names to "const svn_string_t *" values.
 * *PROPS maps "const char *" property names to "const svn_string_t *" values.
 */


See also:

svn_wc__db_base_set_dav_cache();

svn_wc__db_base_get_dav_cache();


[[[
Doc strings for WC-NG properties functions.

* subversion/libsvn_wc/wc_db.h
  (svn_wc__db_base_get_prop, svn_wc__db_base_get_props,
   svn_wc__db_op_set_props, svn_wc__db_temp_op_set_pristine_props,
   svn_wc__db_read_prop, svn_wc__db_read_props,
   svn_wc__db_read_pristine_props): Re-write doc strings.
]]]

--This line, and those below, will be ignored--

Index: subversion/libsvn_wc/wc_db.h
===================================================================
--- subversion/libsvn_wc/wc_db.h	(revision 910914)
+++ subversion/libsvn_wc/wc_db.h	(working copy)
@@ -646,14 +646,9 @@
                          apr_pool_t *scratch_pool);
 
 
-/** Return a property's value from a node in the BASE tree.
- *
- * This is a convenience function to return a single property from the
- * BASE tree node indicated by LOCAL_ABSPATH. The property's name is
- * given in PROPNAME, and the value returned in PROPVAL.
- *
- * All returned data will be allocated in RESULT_POOL. All temporary
- * allocations will be made in SCRATCH_POOL.
+/** Set *PROPVAL to the value of the property named PROPNAME of the node
+ * LOCAL_ABSPATH in BASE.
+ * Allocate *PROPVAL in RESULT_POOL.
  */
 svn_error_t *
 svn_wc__db_base_get_prop(const svn_string_t **propval,
@@ -664,14 +659,9 @@
                          apr_pool_t *scratch_pool);
 
 
-/** Return all properties of the given BASE tree node.
- *
- * All of the properties for the node indicated by LOCAL_ABSPATH will be
- * returned in PROPS as a mapping of const char * names to
- * const svn_string_t * values.
- *
- * All returned data will be allocated in RESULT_POOL. All temporary
- * allocations will be made in SCRATCH_POOL.
+/** Set *PROPS to the properties of LOCAL_ABSPATH in BASE.
+ * *PROPS maps "const char *" property names to "const svn_string_t *" values.
+ * Allocate *PROPS and its keys and values in RESULT_POOL.
  */
 svn_error_t *
 svn_wc__db_base_get_props(apr_hash_t **props,
@@ -952,21 +942,23 @@
                           apr_pool_t *scratch_pool);
 
 
-/* ### note: there is no db_op_set_prop() function. callers must read
-   ### all the properties, change one, and write all the properties.  */
-
-/* Set the props on the ACTUAL node for LOCAL_ABSPATH to PROPS.  This will
-   overwrite whatever working props the node currently has.  PROPS maps
-   property names of type "const char *" to values of type
-   "const svn_string_t *".  Use SCRATCH_POOL for temporary allocations. */
+/** Set the properties of LOCAL_ABSPATH in ACTUAL to PROPS.
+ * This will overwrite whatever working props the node currently has.
+ * PROPS maps "const char *" property names to "const svn_string_t *" values.
+ *
+ * @note: There is no db_op_set_prop() function. Callers must read
+ * all the properties, change one, and write all the properties.
+ */
 svn_error_t *
 svn_wc__db_op_set_props(svn_wc__db_t *db,
                         const char *local_abspath,
                         apr_hash_t *props,
                         apr_pool_t *scratch_pool);
 
-/* Sets the pristine props of LOCAL_ABSPATH on BASE, or when ON_WORKING is
-   TRUE on WORKING */
+/** Set the properties of LOCAL_ABSPATH in BASE (if ON_WORKING is FALSE) or
+ * in WORKING (if ON_WORKING is TRUE) to PROPS.
+ * PROPS maps "const char *" property names to "const svn_string_t *" values.
+ */
 svn_error_t *
 svn_wc__db_temp_op_set_pristine_props(svn_wc__db_t *db,
                                       const char *local_abspath,
@@ -1268,12 +1260,9 @@
                      apr_pool_t *scratch_pool);
 
 
-/** Return a property's value for a node, first using ACTUAL, then
- * WORKING, then BASE.  The property's name is given in PROPNAME, and
- * the value returned in PROPVAL.
- *
- * All returned data will be allocated in RESULT_POOL. All temporary
- * allocations will be made in SCRATCH_POOL.
+/** Set *PROPVAL to the value of the property named PROPNAME of the node
+ * LOCAL_ABSPATH in ACTUAL (else WORKING else BASE).
+ * Allocate *PROPVAL in RESULT_POOL.
  */
 svn_error_t *
 svn_wc__db_read_prop(const svn_string_t **propval,
@@ -1284,13 +1273,11 @@
                      apr_pool_t *scratch_pool);
 
 
-/* Read into PROPS the properties for LOCAL_ABSPATH in DB.  This first check
-   the ACTUAL node, then the WORKING node, and finally the BASE node for
-   properties.  PROPS maps property names of type "const char *" to values
-   of type "const svn_string_t *".
-
-   Allocate PROPS in RESULT_POOL and do temporary allocations
-   in SCRATCH_POOL. */
+/** Set *PROPS to the properties of LOCAL_ABSPATH in ACTUAL (else WORKING else
+ * BASE).
+ * *PROPS maps "const char *" property names to "const svn_string_t *" values.
+ * Allocate *PROPS and its keys and values in RESULT_POOL.
+ */
 svn_error_t *
 svn_wc__db_read_props(apr_hash_t **props,
                       svn_wc__db_t *db,
@@ -1299,13 +1286,10 @@
                       apr_pool_t *scratch_pool);
 
 
-/* Read into PROPS the properties for LOCAL_ABSPATH in DB.  This first check
-   the WORKING node, and then the BASE node for properties.  PROPS maps
-   property names of type "const char *" to values of type
-   "const svn_string_t *".
-
-   Allocate PROPS in RESULT_POOL and do temporary allocations
-   in SCRATCH_POOL. */
+/** Set *PROPS to the properties of LOCAL_ABSPATH in WORKING (else BASE).
+ * *PROPS maps "const char *" property names to "const svn_string_t *" values.
+ * Allocate *PROPS and its keys and values in RESULT_POOL.
+ */
 svn_error_t *
 svn_wc__db_read_pristine_props(apr_hash_t **props,
                                svn_wc__db_t *db,
